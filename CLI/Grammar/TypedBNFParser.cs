//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./CLI/Grammar/TypedBNF.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace TypedBNF {
using System;
using System.IO;
using System.Text;
using System.Diagnostics;
using System.Collections.Generic;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class TypedBNFParser : Parser {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, UNICODE_RANGE=33, RANGE=34, CNAMEPLUS=35, INT=36, WS=37, FLOAT=38, 
		ESCAPED_STRING=39, CPP_COMMENT=40, C_COMMENT=41;
	public const int
		RULE_start = 0, RULE_list_o_toplevel_p_ = 1, RULE_start__y_ = 2, RULE_identstr = 3, 
		RULE_typ = 4, RULE_slist_o__i__s__i__s_param_type_p_ = 5, RULE_empty_o_slist_o__i__s__i__s_param_type_p__p_ = 6, 
		RULE_eslist_o__i__s__i__s_param_type_p_ = 7, RULE_arrow_typ = 8, RULE_slist_o__i__s__i__s_typ_p_ = 9, 
		RULE_typ2 = 10, RULE_type_product = 11, RULE_top_typ = 12, RULE_tvar_str = 13, 
		RULE_param_type = 14, RULE_slist_o__i__s__i__s_tvar_str_p_ = 15, RULE_type_params = 16, 
		RULE_field_ann = 17, RULE_slist_o__i__s__i__s_field_ann_p_ = 18, RULE_empty_o_slist_o__i__s__i__s_field_ann_p__p_ = 19, 
		RULE_eslist_o__i__s__i__s_field_ann_p_ = 20, RULE_field_anns = 21, RULE_decl = 22, 
		RULE_toplevel = 23, RULE_slist_o__i__s__i__s_identstr_p_ = 24, RULE_def = 25, 
		RULE_productions = 26, RULE_list_o_psym_p_ = 27, RULE_empty_o_list_o_psym_p__p_ = 28, 
		RULE_elist_o_psym_p_ = 29, RULE_production = 30, RULE_slist_o__i__s__i__s_psym_p_ = 31, 
		RULE_psym = 32, RULE_ann = 33, RULE_slist_o__i__s__i__s_ann_p_ = 34, RULE_empty_o_slist_o__i__s__i__s_ann_p__p_ = 35, 
		RULE_eslist_o__i__s__i__s_ann_p_ = 36, RULE_func_parameters = 37, RULE_expr = 38, 
		RULE_call = 39, RULE_empty_o_slist_o__i__s__i__s_expr_p__p_ = 40, RULE_eslist_o__i__s__i__s_expr_p_ = 41, 
		RULE_slist_o__i__s__i__s_expr_p_ = 42, RULE_atomexp = 43, RULE_slist_o__i__u__i__s_lexer_and_p_ = 44, 
		RULE_lexer__y_ = 45, RULE_list_o_lexer_atomexpr_p_ = 46, RULE_lexer_and = 47, 
		RULE_lexer_atomexpr = 48, RULE_lexer_atom = 49, RULE_lexerdef = 50;
	public static readonly string[] ruleNames = {
		"start", "list_o_toplevel_p_", "start__y_", "identstr", "typ", "slist_o__i__s__i__s_param_type_p_", 
		"empty_o_slist_o__i__s__i__s_param_type_p__p_", "eslist_o__i__s__i__s_param_type_p_", 
		"arrow_typ", "slist_o__i__s__i__s_typ_p_", "typ2", "type_product", "top_typ", 
		"tvar_str", "param_type", "slist_o__i__s__i__s_tvar_str_p_", "type_params", 
		"field_ann", "slist_o__i__s__i__s_field_ann_p_", "empty_o_slist_o__i__s__i__s_field_ann_p__p_", 
		"eslist_o__i__s__i__s_field_ann_p_", "field_anns", "decl", "toplevel", 
		"slist_o__i__s__i__s_identstr_p_", "def", "productions", "list_o_psym_p_", 
		"empty_o_list_o_psym_p__p_", "elist_o_psym_p_", "production", "slist_o__i__s__i__s_psym_p_", 
		"psym", "ann", "slist_o__i__s__i__s_ann_p_", "empty_o_slist_o__i__s__i__s_ann_p__p_", 
		"eslist_o__i__s__i__s_ann_p_", "func_parameters", "expr", "call", "empty_o_slist_o__i__s__i__s_expr_p__p_", 
		"eslist_o__i__s__i__s_expr_p_", "slist_o__i__s__i__s_expr_p_", "atomexp", 
		"slist_o__i__u__i__s_lexer_and_p_", "lexer__y_", "list_o_lexer_atomexpr_p_", 
		"lexer_and", "lexer_atomexpr", "lexer_atom", "lexerdef"
	};

	private static readonly string[] _LiteralNames = {
		null, "','", "'->'", "'('", "')'", "'<'", "'>'", "'*'", "':'", "'extern'", 
		"'var'", "'case'", "'type'", "'ignore'", "'|'", "'{'", "'}'", "'let'", 
		"'='", "'in'", "'fun'", "';'", "'$'", "'['", "']'", "'.'", "'true'", "'false'", 
		"'+'", "'?'", "'!'", "'\\d'", "'_'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "UNICODE_RANGE", 
		"RANGE", "CNAMEPLUS", "INT", "WS", "FLOAT", "ESCAPED_STRING", "CPP_COMMENT", 
		"C_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "TypedBNF.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static TypedBNFParser() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}



		public TypedBNFParser(ITokenStream input) : this(input, Console.Out, Console.Error) { }

		public TypedBNFParser(ITokenStream input, TextWriter output, TextWriter errorOutput)
		: base(input, output, errorOutput)
	{
		Interpreter = new ParserATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	public partial class StartContext : ParserRuleContext {
		public definition[] result;
		public Start__y_Context v;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Eof() { return GetToken(TypedBNFParser.Eof, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public Start__y_Context start__y_() {
			return GetRuleContext<Start__y_Context>(0);
		}
		public StartContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_start; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterStart(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitStart(this);
		}
	}

	[RuleVersion(0)]
	public StartContext start() {
		StartContext _localctx = new StartContext(Context, State);
		EnterRule(_localctx, 0, RULE_start);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 102;
			_localctx.v = start__y_();
			State = 103;
			Match(Eof);
			 _localctx.result =  _localctx.v.result; 
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class List_o_toplevel_p_Context : ParserRuleContext {
		public definition[] result;
		public List_o_toplevel_p_Context list_o_toplevel_p__1__1;
		public ToplevelContext list_o_toplevel_p__0__1;
		public ToplevelContext list_o_toplevel_p__1__2;
		[System.Diagnostics.DebuggerNonUserCode] public ToplevelContext toplevel() {
			return GetRuleContext<ToplevelContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public List_o_toplevel_p_Context list_o_toplevel_p_() {
			return GetRuleContext<List_o_toplevel_p_Context>(0);
		}
		public List_o_toplevel_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_list_o_toplevel_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterList_o_toplevel_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitList_o_toplevel_p_(this);
		}
	}

	[RuleVersion(0)]
	public List_o_toplevel_p_Context list_o_toplevel_p_() {
		return list_o_toplevel_p_(0);
	}

	private List_o_toplevel_p_Context list_o_toplevel_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		List_o_toplevel_p_Context _localctx = new List_o_toplevel_p_Context(Context, _parentState);
		List_o_toplevel_p_Context _prevctx = _localctx;
		int _startState = 2;
		EnterRecursionRule(_localctx, 2, RULE_list_o_toplevel_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 107;
			_localctx.list_o_toplevel_p__0__1 = toplevel();
			 _localctx.result =  new definition[] { _localctx.list_o_toplevel_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 116;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,0,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new List_o_toplevel_p_Context(_parentctx, _parentState);
					_localctx.list_o_toplevel_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_list_o_toplevel_p_);
					State = 110;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 111;
					_localctx.list_o_toplevel_p__1__2 = toplevel();
					 _localctx.result =  (definition[]) addList<definition>((definition[]) _localctx.list_o_toplevel_p__1__1.result, (definition) _localctx.list_o_toplevel_p__1__2.result);
					                      
					}
					} 
				}
				State = 118;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,0,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Start__y_Context : ParserRuleContext {
		public definition[] result;
		public List_o_toplevel_p_Context start__y__0__1;
		[System.Diagnostics.DebuggerNonUserCode] public List_o_toplevel_p_Context list_o_toplevel_p_() {
			return GetRuleContext<List_o_toplevel_p_Context>(0);
		}
		public Start__y_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_start__y_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterStart__y_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitStart__y_(this);
		}
	}

	[RuleVersion(0)]
	public Start__y_Context start__y_() {
		Start__y_Context _localctx = new Start__y_Context(Context, State);
		EnterRule(_localctx, 4, RULE_start__y_);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 119;
			_localctx.start__y__0__1 = list_o_toplevel_p_(0);
			 _localctx.result =  _localctx.start__y__0__1.result;
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class IdentstrContext : ParserRuleContext {
		public string result;
		public IToken identstr_0__1;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CNAMEPLUS() { return GetToken(TypedBNFParser.CNAMEPLUS, 0); }
		public IdentstrContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_identstr; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterIdentstr(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitIdentstr(this);
		}
	}

	[RuleVersion(0)]
	public IdentstrContext identstr() {
		IdentstrContext _localctx = new IdentstrContext(Context, State);
		EnterRule(_localctx, 6, RULE_identstr);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 122;
			_localctx.identstr_0__1 = Match(CNAMEPLUS);
			 _localctx.result =  (string) str((IToken) _localctx.identstr_0__1);
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TypContext : ParserRuleContext {
		public monot result;
		public Arrow_typContext typ_0__1;
		[System.Diagnostics.DebuggerNonUserCode] public Arrow_typContext arrow_typ() {
			return GetRuleContext<Arrow_typContext>(0);
		}
		public TypContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_typ; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterTyp(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitTyp(this);
		}
	}

	[RuleVersion(0)]
	public TypContext typ() {
		TypContext _localctx = new TypContext(Context, State);
		EnterRule(_localctx, 8, RULE_typ);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 125;
			_localctx.typ_0__1 = arrow_typ();
			 _localctx.result =  _localctx.typ_0__1.result;
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Slist_o__i__s__i__s_param_type_p_Context : ParserRuleContext {
		public (string, monot)[] result;
		public Slist_o__i__s__i__s_param_type_p_Context slist_o__i__s__i__s_param_type_p__1__1;
		public Param_typeContext slist_o__i__s__i__s_param_type_p__0__1;
		public Param_typeContext slist_o__i__s__i__s_param_type_p__1__3;
		[System.Diagnostics.DebuggerNonUserCode] public Param_typeContext param_type() {
			return GetRuleContext<Param_typeContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_param_type_p_Context slist_o__i__s__i__s_param_type_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_param_type_p_Context>(0);
		}
		public Slist_o__i__s__i__s_param_type_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slist_o__i__s__i__s_param_type_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterSlist_o__i__s__i__s_param_type_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitSlist_o__i__s__i__s_param_type_p_(this);
		}
	}

	[RuleVersion(0)]
	public Slist_o__i__s__i__s_param_type_p_Context slist_o__i__s__i__s_param_type_p_() {
		return slist_o__i__s__i__s_param_type_p_(0);
	}

	private Slist_o__i__s__i__s_param_type_p_Context slist_o__i__s__i__s_param_type_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Slist_o__i__s__i__s_param_type_p_Context _localctx = new Slist_o__i__s__i__s_param_type_p_Context(Context, _parentState);
		Slist_o__i__s__i__s_param_type_p_Context _prevctx = _localctx;
		int _startState = 10;
		EnterRecursionRule(_localctx, 10, RULE_slist_o__i__s__i__s_param_type_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 129;
			_localctx.slist_o__i__s__i__s_param_type_p__0__1 = param_type();
			 _localctx.result =  new (string, monot)[] { _localctx.slist_o__i__s__i__s_param_type_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 139;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,1,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Slist_o__i__s__i__s_param_type_p_Context(_parentctx, _parentState);
					_localctx.slist_o__i__s__i__s_param_type_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_slist_o__i__s__i__s_param_type_p_);
					State = 132;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 133;
					Match(T__0);
					State = 134;
					_localctx.slist_o__i__s__i__s_param_type_p__1__3 = param_type();
					 _localctx.result =  ((string, monot)[]) addList<(string, monot)>(((string, monot)[]) _localctx.slist_o__i__s__i__s_param_type_p__1__1.result, ((string, monot)) _localctx.slist_o__i__s__i__s_param_type_p__1__3.result);
					                      
					}
					} 
				}
				State = 141;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,1,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Empty_o_slist_o__i__s__i__s_param_type_p__p_Context : ParserRuleContext {
		public (string, monot)[] result;
		public Slist_o__i__s__i__s_param_type_p_Context empty_o_slist_o__i__s__i__s_param_type_p__p__1__1;
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_param_type_p_Context slist_o__i__s__i__s_param_type_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_param_type_p_Context>(0);
		}
		public Empty_o_slist_o__i__s__i__s_param_type_p__p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_empty_o_slist_o__i__s__i__s_param_type_p__p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterEmpty_o_slist_o__i__s__i__s_param_type_p__p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitEmpty_o_slist_o__i__s__i__s_param_type_p__p_(this);
		}
	}

	[RuleVersion(0)]
	public Empty_o_slist_o__i__s__i__s_param_type_p__p_Context empty_o_slist_o__i__s__i__s_param_type_p__p_() {
		Empty_o_slist_o__i__s__i__s_param_type_p__p_Context _localctx = new Empty_o_slist_o__i__s__i__s_param_type_p__p_Context(Context, State);
		EnterRule(_localctx, 12, RULE_empty_o_slist_o__i__s__i__s_param_type_p__p_);
		try {
			State = 146;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__3:
				EnterOuterAlt(_localctx, 1);
				{
				 _localctx.result =  new (string, monot)[] {  };
				            
				}
				break;
			case T__2:
			case CNAMEPLUS:
				EnterOuterAlt(_localctx, 2);
				{
				State = 143;
				_localctx.empty_o_slist_o__i__s__i__s_param_type_p__p__1__1 = slist_o__i__s__i__s_param_type_p_(0);
				 _localctx.result =  _localctx.empty_o_slist_o__i__s__i__s_param_type_p__p__1__1.result;
				            
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Eslist_o__i__s__i__s_param_type_p_Context : ParserRuleContext {
		public (string, monot)[] result;
		public Empty_o_slist_o__i__s__i__s_param_type_p__p_Context eslist_o__i__s__i__s_param_type_p__0__1;
		[System.Diagnostics.DebuggerNonUserCode] public Empty_o_slist_o__i__s__i__s_param_type_p__p_Context empty_o_slist_o__i__s__i__s_param_type_p__p_() {
			return GetRuleContext<Empty_o_slist_o__i__s__i__s_param_type_p__p_Context>(0);
		}
		public Eslist_o__i__s__i__s_param_type_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_eslist_o__i__s__i__s_param_type_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterEslist_o__i__s__i__s_param_type_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitEslist_o__i__s__i__s_param_type_p_(this);
		}
	}

	[RuleVersion(0)]
	public Eslist_o__i__s__i__s_param_type_p_Context eslist_o__i__s__i__s_param_type_p_() {
		Eslist_o__i__s__i__s_param_type_p_Context _localctx = new Eslist_o__i__s__i__s_param_type_p_Context(Context, State);
		EnterRule(_localctx, 14, RULE_eslist_o__i__s__i__s_param_type_p_);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 148;
			_localctx.eslist_o__i__s__i__s_param_type_p__0__1 = empty_o_slist_o__i__s__i__s_param_type_p__p_();
			 _localctx.result =  _localctx.eslist_o__i__s__i__s_param_type_p__0__1.result;
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Arrow_typContext : ParserRuleContext {
		public monot result;
		public Typ2Context arrow_typ_0__1;
		public Arrow_typContext arrow_typ_0__3;
		public Eslist_o__i__s__i__s_param_type_p_Context arrow_typ_1__2;
		public Arrow_typContext arrow_typ_1__5;
		public Type_productContext arrow_typ_2__1;
		[System.Diagnostics.DebuggerNonUserCode] public Typ2Context typ2() {
			return GetRuleContext<Typ2Context>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Arrow_typContext arrow_typ() {
			return GetRuleContext<Arrow_typContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Eslist_o__i__s__i__s_param_type_p_Context eslist_o__i__s__i__s_param_type_p_() {
			return GetRuleContext<Eslist_o__i__s__i__s_param_type_p_Context>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Type_productContext type_product() {
			return GetRuleContext<Type_productContext>(0);
		}
		public Arrow_typContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_arrow_typ; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterArrow_typ(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitArrow_typ(this);
		}
	}

	[RuleVersion(0)]
	public Arrow_typContext arrow_typ() {
		Arrow_typContext _localctx = new Arrow_typContext(Context, State);
		EnterRule(_localctx, 16, RULE_arrow_typ);
		try {
			State = 166;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,3,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 151;
				_localctx.arrow_typ_0__1 = typ2(0);
				State = 152;
				Match(T__1);
				State = 153;
				_localctx.arrow_typ_0__3 = arrow_typ();
				 _localctx.result =  (monot) MK_TFun(((string, monot)[]) new (string, monot)[] { ("value", _localctx.arrow_typ_0__1.result) }, (monot) _localctx.arrow_typ_0__3.result);
				            
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 156;
				Match(T__2);
				State = 157;
				_localctx.arrow_typ_1__2 = eslist_o__i__s__i__s_param_type_p_();
				State = 158;
				Match(T__3);
				State = 159;
				Match(T__1);
				State = 160;
				_localctx.arrow_typ_1__5 = arrow_typ();
				 _localctx.result =  (monot) MK_TFun(((string, monot)[]) ((string, monot)[]) process_tparam(((string, monot)[]) _localctx.arrow_typ_1__2.result), (monot) _localctx.arrow_typ_1__5.result);
				            
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 163;
				_localctx.arrow_typ_2__1 = type_product(0);
				 _localctx.result =  (monot) MK_TTuple((monot[]) _localctx.arrow_typ_2__1.result);
				            
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Slist_o__i__s__i__s_typ_p_Context : ParserRuleContext {
		public monot[] result;
		public Slist_o__i__s__i__s_typ_p_Context slist_o__i__s__i__s_typ_p__1__1;
		public TypContext slist_o__i__s__i__s_typ_p__0__1;
		public TypContext slist_o__i__s__i__s_typ_p__1__3;
		[System.Diagnostics.DebuggerNonUserCode] public TypContext typ() {
			return GetRuleContext<TypContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_typ_p_Context slist_o__i__s__i__s_typ_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_typ_p_Context>(0);
		}
		public Slist_o__i__s__i__s_typ_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slist_o__i__s__i__s_typ_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterSlist_o__i__s__i__s_typ_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitSlist_o__i__s__i__s_typ_p_(this);
		}
	}

	[RuleVersion(0)]
	public Slist_o__i__s__i__s_typ_p_Context slist_o__i__s__i__s_typ_p_() {
		return slist_o__i__s__i__s_typ_p_(0);
	}

	private Slist_o__i__s__i__s_typ_p_Context slist_o__i__s__i__s_typ_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Slist_o__i__s__i__s_typ_p_Context _localctx = new Slist_o__i__s__i__s_typ_p_Context(Context, _parentState);
		Slist_o__i__s__i__s_typ_p_Context _prevctx = _localctx;
		int _startState = 18;
		EnterRecursionRule(_localctx, 18, RULE_slist_o__i__s__i__s_typ_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 169;
			_localctx.slist_o__i__s__i__s_typ_p__0__1 = typ();
			 _localctx.result =  new monot[] { _localctx.slist_o__i__s__i__s_typ_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 179;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,4,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Slist_o__i__s__i__s_typ_p_Context(_parentctx, _parentState);
					_localctx.slist_o__i__s__i__s_typ_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_slist_o__i__s__i__s_typ_p_);
					State = 172;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 173;
					Match(T__0);
					State = 174;
					_localctx.slist_o__i__s__i__s_typ_p__1__3 = typ();
					 _localctx.result =  (monot[]) addList<monot>((monot[]) _localctx.slist_o__i__s__i__s_typ_p__1__1.result, (monot) _localctx.slist_o__i__s__i__s_typ_p__1__3.result);
					                      
					}
					} 
				}
				State = 181;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,4,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Typ2Context : ParserRuleContext {
		public monot result;
		public Typ2Context typ2_1__1;
		public IToken typ2_0__1;
		public Slist_o__i__s__i__s_typ_p_Context typ2_1__3;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CNAMEPLUS() { return GetToken(TypedBNFParser.CNAMEPLUS, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public Typ2Context typ2() {
			return GetRuleContext<Typ2Context>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_typ_p_Context slist_o__i__s__i__s_typ_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_typ_p_Context>(0);
		}
		public Typ2Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_typ2; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterTyp2(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitTyp2(this);
		}
	}

	[RuleVersion(0)]
	public Typ2Context typ2() {
		return typ2(0);
	}

	private Typ2Context typ2(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Typ2Context _localctx = new Typ2Context(Context, _parentState);
		Typ2Context _prevctx = _localctx;
		int _startState = 20;
		EnterRecursionRule(_localctx, 20, RULE_typ2, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 183;
			_localctx.typ2_0__1 = Match(CNAMEPLUS);
			 _localctx.result =  (monot) MK_TConst((string) (string) str((IToken) _localctx.typ2_0__1));
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 194;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,5,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Typ2Context(_parentctx, _parentState);
					_localctx.typ2_1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_typ2);
					State = 186;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 187;
					Match(T__4);
					State = 188;
					_localctx.typ2_1__3 = slist_o__i__s__i__s_typ_p_(0);
					State = 189;
					Match(T__5);
					 _localctx.result =  (monot) MK_TApp((monot) _localctx.typ2_1__1.result, (monot[]) _localctx.typ2_1__3.result);
					                      
					}
					} 
				}
				State = 196;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,5,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Type_productContext : ParserRuleContext {
		public monot[] result;
		public Type_productContext type_product_0__1;
		public Typ2Context type_product_1__1;
		public Typ2Context type_product_0__3;
		[System.Diagnostics.DebuggerNonUserCode] public Typ2Context typ2() {
			return GetRuleContext<Typ2Context>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Type_productContext type_product() {
			return GetRuleContext<Type_productContext>(0);
		}
		public Type_productContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_type_product; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterType_product(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitType_product(this);
		}
	}

	[RuleVersion(0)]
	public Type_productContext type_product() {
		return type_product(0);
	}

	private Type_productContext type_product(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Type_productContext _localctx = new Type_productContext(Context, _parentState);
		Type_productContext _prevctx = _localctx;
		int _startState = 22;
		EnterRecursionRule(_localctx, 22, RULE_type_product, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 198;
			_localctx.type_product_1__1 = typ2(0);
			 _localctx.result =  new monot[] { _localctx.type_product_1__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 208;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,6,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Type_productContext(_parentctx, _parentState);
					_localctx.type_product_0__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_type_product);
					State = 201;
					if (!(Precpred(Context, 2))) throw new FailedPredicateException(this, "Precpred(Context, 2)");
					State = 202;
					Match(T__6);
					State = 203;
					_localctx.type_product_0__3 = typ2(0);
					 _localctx.result =  (monot[]) addList<monot>((monot[]) _localctx.type_product_0__1.result, (monot) _localctx.type_product_0__3.result);
					                      
					}
					} 
				}
				State = 210;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,6,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Top_typContext : ParserRuleContext {
		public polyt result;
		public Slist_o__i__s__i__s_tvar_str_p_Context top_typ_0__2;
		public TypContext top_typ_0__4;
		public TypContext top_typ_1__1;
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_tvar_str_p_Context slist_o__i__s__i__s_tvar_str_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_tvar_str_p_Context>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TypContext typ() {
			return GetRuleContext<TypContext>(0);
		}
		public Top_typContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_top_typ; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterTop_typ(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitTop_typ(this);
		}
	}

	[RuleVersion(0)]
	public Top_typContext top_typ() {
		Top_typContext _localctx = new Top_typContext(Context, State);
		EnterRule(_localctx, 24, RULE_top_typ);
		try {
			State = 220;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__4:
				EnterOuterAlt(_localctx, 1);
				{
				State = 211;
				Match(T__4);
				State = 212;
				_localctx.top_typ_0__2 = slist_o__i__s__i__s_tvar_str_p_(0);
				State = 213;
				Match(T__5);
				State = 214;
				_localctx.top_typ_0__4 = typ();
				 _localctx.result =  (polyt) MK_Poly((string[]) _localctx.top_typ_0__2.result, (monot) _localctx.top_typ_0__4.result);
				            
				}
				break;
			case T__2:
			case CNAMEPLUS:
				EnterOuterAlt(_localctx, 2);
				{
				State = 217;
				_localctx.top_typ_1__1 = typ();
				 _localctx.result =  (polyt) MK_Mono((monot) _localctx.top_typ_1__1.result);
				            
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Tvar_strContext : ParserRuleContext {
		public string result;
		public IToken tvar_str_0__1;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CNAMEPLUS() { return GetToken(TypedBNFParser.CNAMEPLUS, 0); }
		public Tvar_strContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tvar_str; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterTvar_str(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitTvar_str(this);
		}
	}

	[RuleVersion(0)]
	public Tvar_strContext tvar_str() {
		Tvar_strContext _localctx = new Tvar_strContext(Context, State);
		EnterRule(_localctx, 26, RULE_tvar_str);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 222;
			_localctx.tvar_str_0__1 = Match(CNAMEPLUS);
			 _localctx.result =  (string) str((IToken) _localctx.tvar_str_0__1);
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Param_typeContext : ParserRuleContext {
		public (string, monot) result;
		public IToken param_type_0__1;
		public TypContext param_type_0__3;
		public TypContext param_type_1__1;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CNAMEPLUS() { return GetToken(TypedBNFParser.CNAMEPLUS, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public TypContext typ() {
			return GetRuleContext<TypContext>(0);
		}
		public Param_typeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_param_type; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterParam_type(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitParam_type(this);
		}
	}

	[RuleVersion(0)]
	public Param_typeContext param_type() {
		Param_typeContext _localctx = new Param_typeContext(Context, State);
		EnterRule(_localctx, 28, RULE_param_type);
		try {
			State = 233;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,8,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 225;
				_localctx.param_type_0__1 = Match(CNAMEPLUS);
				State = 226;
				Match(T__7);
				State = 227;
				_localctx.param_type_0__3 = typ();
				 _localctx.result =  ((string) str((IToken) _localctx.param_type_0__1), _localctx.param_type_0__3.result);
				            
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 230;
				_localctx.param_type_1__1 = typ();
				 _localctx.result =  ("_", _localctx.param_type_1__1.result);
				            
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Slist_o__i__s__i__s_tvar_str_p_Context : ParserRuleContext {
		public string[] result;
		public Slist_o__i__s__i__s_tvar_str_p_Context slist_o__i__s__i__s_tvar_str_p__1__1;
		public Tvar_strContext slist_o__i__s__i__s_tvar_str_p__0__1;
		public Tvar_strContext slist_o__i__s__i__s_tvar_str_p__1__3;
		[System.Diagnostics.DebuggerNonUserCode] public Tvar_strContext tvar_str() {
			return GetRuleContext<Tvar_strContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_tvar_str_p_Context slist_o__i__s__i__s_tvar_str_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_tvar_str_p_Context>(0);
		}
		public Slist_o__i__s__i__s_tvar_str_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slist_o__i__s__i__s_tvar_str_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterSlist_o__i__s__i__s_tvar_str_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitSlist_o__i__s__i__s_tvar_str_p_(this);
		}
	}

	[RuleVersion(0)]
	public Slist_o__i__s__i__s_tvar_str_p_Context slist_o__i__s__i__s_tvar_str_p_() {
		return slist_o__i__s__i__s_tvar_str_p_(0);
	}

	private Slist_o__i__s__i__s_tvar_str_p_Context slist_o__i__s__i__s_tvar_str_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Slist_o__i__s__i__s_tvar_str_p_Context _localctx = new Slist_o__i__s__i__s_tvar_str_p_Context(Context, _parentState);
		Slist_o__i__s__i__s_tvar_str_p_Context _prevctx = _localctx;
		int _startState = 30;
		EnterRecursionRule(_localctx, 30, RULE_slist_o__i__s__i__s_tvar_str_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 236;
			_localctx.slist_o__i__s__i__s_tvar_str_p__0__1 = tvar_str();
			 _localctx.result =  new string[] { _localctx.slist_o__i__s__i__s_tvar_str_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 246;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,9,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Slist_o__i__s__i__s_tvar_str_p_Context(_parentctx, _parentState);
					_localctx.slist_o__i__s__i__s_tvar_str_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_slist_o__i__s__i__s_tvar_str_p_);
					State = 239;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 240;
					Match(T__0);
					State = 241;
					_localctx.slist_o__i__s__i__s_tvar_str_p__1__3 = tvar_str();
					 _localctx.result =  (string[]) addList<string>((string[]) _localctx.slist_o__i__s__i__s_tvar_str_p__1__1.result, (string) _localctx.slist_o__i__s__i__s_tvar_str_p__1__3.result);
					                      
					}
					} 
				}
				State = 248;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,9,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Type_paramsContext : ParserRuleContext {
		public string[] result;
		public Slist_o__i__s__i__s_tvar_str_p_Context type_params_0__2;
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_tvar_str_p_Context slist_o__i__s__i__s_tvar_str_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_tvar_str_p_Context>(0);
		}
		public Type_paramsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_type_params; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterType_params(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitType_params(this);
		}
	}

	[RuleVersion(0)]
	public Type_paramsContext type_params() {
		Type_paramsContext _localctx = new Type_paramsContext(Context, State);
		EnterRule(_localctx, 32, RULE_type_params);
		try {
			State = 255;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,10,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 249;
				Match(T__4);
				State = 250;
				_localctx.type_params_0__2 = slist_o__i__s__i__s_tvar_str_p_(0);
				State = 251;
				Match(T__5);
				 _localctx.result =  _localctx.type_params_0__2.result;
				            
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				 _localctx.result =  new string[] {  };
				            
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Field_annContext : ParserRuleContext {
		public (string, monot, position) result;
		public IToken field_ann_0__1;
		public TypContext field_ann_0__3;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CNAMEPLUS() { return GetToken(TypedBNFParser.CNAMEPLUS, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public TypContext typ() {
			return GetRuleContext<TypContext>(0);
		}
		public Field_annContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_field_ann; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterField_ann(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitField_ann(this);
		}
	}

	[RuleVersion(0)]
	public Field_annContext field_ann() {
		Field_annContext _localctx = new Field_annContext(Context, State);
		EnterRule(_localctx, 34, RULE_field_ann);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 257;
			_localctx.field_ann_0__1 = Match(CNAMEPLUS);
			State = 258;
			Match(T__7);
			State = 259;
			_localctx.field_ann_0__3 = typ();
			 _localctx.result =  ((string) str((IToken) _localctx.field_ann_0__1), _localctx.field_ann_0__3.result, (position) mkpos((IToken) _localctx.field_ann_0__1));
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Slist_o__i__s__i__s_field_ann_p_Context : ParserRuleContext {
		public (string, monot, position)[] result;
		public Slist_o__i__s__i__s_field_ann_p_Context slist_o__i__s__i__s_field_ann_p__1__1;
		public Field_annContext slist_o__i__s__i__s_field_ann_p__0__1;
		public Field_annContext slist_o__i__s__i__s_field_ann_p__1__3;
		[System.Diagnostics.DebuggerNonUserCode] public Field_annContext field_ann() {
			return GetRuleContext<Field_annContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_field_ann_p_Context slist_o__i__s__i__s_field_ann_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_field_ann_p_Context>(0);
		}
		public Slist_o__i__s__i__s_field_ann_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slist_o__i__s__i__s_field_ann_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterSlist_o__i__s__i__s_field_ann_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitSlist_o__i__s__i__s_field_ann_p_(this);
		}
	}

	[RuleVersion(0)]
	public Slist_o__i__s__i__s_field_ann_p_Context slist_o__i__s__i__s_field_ann_p_() {
		return slist_o__i__s__i__s_field_ann_p_(0);
	}

	private Slist_o__i__s__i__s_field_ann_p_Context slist_o__i__s__i__s_field_ann_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Slist_o__i__s__i__s_field_ann_p_Context _localctx = new Slist_o__i__s__i__s_field_ann_p_Context(Context, _parentState);
		Slist_o__i__s__i__s_field_ann_p_Context _prevctx = _localctx;
		int _startState = 36;
		EnterRecursionRule(_localctx, 36, RULE_slist_o__i__s__i__s_field_ann_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 263;
			_localctx.slist_o__i__s__i__s_field_ann_p__0__1 = field_ann();
			 _localctx.result =  new (string, monot, position)[] { _localctx.slist_o__i__s__i__s_field_ann_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 273;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,11,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Slist_o__i__s__i__s_field_ann_p_Context(_parentctx, _parentState);
					_localctx.slist_o__i__s__i__s_field_ann_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_slist_o__i__s__i__s_field_ann_p_);
					State = 266;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 267;
					Match(T__0);
					State = 268;
					_localctx.slist_o__i__s__i__s_field_ann_p__1__3 = field_ann();
					 _localctx.result =  ((string, monot, position)[]) addList<(string, monot, position)>(((string, monot, position)[]) _localctx.slist_o__i__s__i__s_field_ann_p__1__1.result, ((string, monot, position)) _localctx.slist_o__i__s__i__s_field_ann_p__1__3.result);
					                      
					}
					} 
				}
				State = 275;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,11,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Empty_o_slist_o__i__s__i__s_field_ann_p__p_Context : ParserRuleContext {
		public (string, monot, position)[] result;
		public Slist_o__i__s__i__s_field_ann_p_Context empty_o_slist_o__i__s__i__s_field_ann_p__p__1__1;
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_field_ann_p_Context slist_o__i__s__i__s_field_ann_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_field_ann_p_Context>(0);
		}
		public Empty_o_slist_o__i__s__i__s_field_ann_p__p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_empty_o_slist_o__i__s__i__s_field_ann_p__p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterEmpty_o_slist_o__i__s__i__s_field_ann_p__p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitEmpty_o_slist_o__i__s__i__s_field_ann_p__p_(this);
		}
	}

	[RuleVersion(0)]
	public Empty_o_slist_o__i__s__i__s_field_ann_p__p_Context empty_o_slist_o__i__s__i__s_field_ann_p__p_() {
		Empty_o_slist_o__i__s__i__s_field_ann_p__p_Context _localctx = new Empty_o_slist_o__i__s__i__s_field_ann_p__p_Context(Context, State);
		EnterRule(_localctx, 38, RULE_empty_o_slist_o__i__s__i__s_field_ann_p__p_);
		try {
			State = 280;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__3:
				EnterOuterAlt(_localctx, 1);
				{
				 _localctx.result =  new (string, monot, position)[] {  };
				            
				}
				break;
			case CNAMEPLUS:
				EnterOuterAlt(_localctx, 2);
				{
				State = 277;
				_localctx.empty_o_slist_o__i__s__i__s_field_ann_p__p__1__1 = slist_o__i__s__i__s_field_ann_p_(0);
				 _localctx.result =  _localctx.empty_o_slist_o__i__s__i__s_field_ann_p__p__1__1.result;
				            
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Eslist_o__i__s__i__s_field_ann_p_Context : ParserRuleContext {
		public (string, monot, position)[] result;
		public Empty_o_slist_o__i__s__i__s_field_ann_p__p_Context eslist_o__i__s__i__s_field_ann_p__0__1;
		[System.Diagnostics.DebuggerNonUserCode] public Empty_o_slist_o__i__s__i__s_field_ann_p__p_Context empty_o_slist_o__i__s__i__s_field_ann_p__p_() {
			return GetRuleContext<Empty_o_slist_o__i__s__i__s_field_ann_p__p_Context>(0);
		}
		public Eslist_o__i__s__i__s_field_ann_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_eslist_o__i__s__i__s_field_ann_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterEslist_o__i__s__i__s_field_ann_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitEslist_o__i__s__i__s_field_ann_p_(this);
		}
	}

	[RuleVersion(0)]
	public Eslist_o__i__s__i__s_field_ann_p_Context eslist_o__i__s__i__s_field_ann_p_() {
		Eslist_o__i__s__i__s_field_ann_p_Context _localctx = new Eslist_o__i__s__i__s_field_ann_p_Context(Context, State);
		EnterRule(_localctx, 40, RULE_eslist_o__i__s__i__s_field_ann_p_);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 282;
			_localctx.eslist_o__i__s__i__s_field_ann_p__0__1 = empty_o_slist_o__i__s__i__s_field_ann_p__p_();
			 _localctx.result =  _localctx.eslist_o__i__s__i__s_field_ann_p__0__1.result;
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Field_annsContext : ParserRuleContext {
		public (bool, (string, monot, position)[]) result;
		public Eslist_o__i__s__i__s_field_ann_p_Context field_anns_0__2;
		[System.Diagnostics.DebuggerNonUserCode] public Eslist_o__i__s__i__s_field_ann_p_Context eslist_o__i__s__i__s_field_ann_p_() {
			return GetRuleContext<Eslist_o__i__s__i__s_field_ann_p_Context>(0);
		}
		public Field_annsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_field_anns; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterField_anns(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitField_anns(this);
		}
	}

	[RuleVersion(0)]
	public Field_annsContext field_anns() {
		Field_annsContext _localctx = new Field_annsContext(Context, State);
		EnterRule(_localctx, 42, RULE_field_anns);
		try {
			State = 291;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,13,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 285;
				Match(T__2);
				State = 286;
				_localctx.field_anns_0__2 = eslist_o__i__s__i__s_field_ann_p_();
				State = 287;
				Match(T__3);
				 _localctx.result =  (true, _localctx.field_anns_0__2.result);
				            
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				 _localctx.result =  (false, new (string, monot, position)[] {  });
				            
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DeclContext : ParserRuleContext {
		public definition result;
		public IToken decl_0__2;
		public IdentstrContext decl_0__3;
		public Top_typContext decl_0__5;
		public IToken decl_1__1;
		public IdentstrContext decl_1__2;
		public TypContext decl_1__4;
		public IToken decl_2__1;
		public IdentstrContext decl_2__3;
		public Type_paramsContext decl_2__4;
		public Field_annsContext decl_2__5;
		public IToken decl_3__1;
		public IdentstrContext decl_3__2;
		public Type_paramsContext decl_3__3;
		public Field_annsContext decl_3__4;
		[System.Diagnostics.DebuggerNonUserCode] public IdentstrContext identstr() {
			return GetRuleContext<IdentstrContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Top_typContext top_typ() {
			return GetRuleContext<Top_typContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TypContext typ() {
			return GetRuleContext<TypContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Type_paramsContext type_params() {
			return GetRuleContext<Type_paramsContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Field_annsContext field_anns() {
			return GetRuleContext<Field_annsContext>(0);
		}
		public DeclContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_decl; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterDecl(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitDecl(this);
		}
	}

	[RuleVersion(0)]
	public DeclContext decl() {
		DeclContext _localctx = new DeclContext(Context, State);
		EnterRule(_localctx, 44, RULE_decl);
		try {
			State = 319;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,14,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 293;
				Match(T__8);
				State = 294;
				_localctx.decl_0__2 = Match(T__9);
				State = 295;
				_localctx.decl_0__3 = identstr();
				State = 296;
				Match(T__7);
				State = 297;
				_localctx.decl_0__5 = top_typ();
				 _localctx.result =  (definition) MK_Declvar((string) _localctx.decl_0__3.result, (polyt) _localctx.decl_0__5.result, (position) (position) mkpos((IToken) _localctx.decl_0__2));
				            
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 300;
				_localctx.decl_1__1 = Match(T__10);
				State = 301;
				_localctx.decl_1__2 = identstr();
				State = 302;
				Match(T__7);
				State = 303;
				_localctx.decl_1__4 = typ();
				 _localctx.result =  (definition) MK_Declctor((string) _localctx.decl_1__2.result, (monot) _localctx.decl_1__4.result, (position) (position) mkpos((IToken) _localctx.decl_1__1));
				            
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 306;
				_localctx.decl_2__1 = Match(T__8);
				State = 307;
				Match(T__11);
				State = 308;
				_localctx.decl_2__3 = identstr();
				State = 309;
				_localctx.decl_2__4 = type_params();
				State = 310;
				_localctx.decl_2__5 = field_anns();
				 _localctx.result =  (definition) MK_Decltype((bool) true, (bool) (bool) fst<bool, (string, monot, position)[]>(((bool, (string, monot, position)[])) _localctx.decl_2__5.result), (string) _localctx.decl_2__3.result, (string[]) _localctx.decl_2__4.result, ((string, monot, position)[]) ((string, monot, position)[]) snd<bool, (string, monot, position)[]>(((bool, (string, monot, position)[])) _localctx.decl_2__5.result), (position) (position) mkpos((IToken) _localctx.decl_2__1));
				            
				}
				break;
			case 4:
				EnterOuterAlt(_localctx, 4);
				{
				State = 313;
				_localctx.decl_3__1 = Match(T__11);
				State = 314;
				_localctx.decl_3__2 = identstr();
				State = 315;
				_localctx.decl_3__3 = type_params();
				State = 316;
				_localctx.decl_3__4 = field_anns();
				 _localctx.result =  (definition) MK_Decltype((bool) false, (bool) (bool) fst<bool, (string, monot, position)[]>(((bool, (string, monot, position)[])) _localctx.decl_3__4.result), (string) _localctx.decl_3__2.result, (string[]) _localctx.decl_3__3.result, ((string, monot, position)[]) ((string, monot, position)[]) snd<bool, (string, monot, position)[]>(((bool, (string, monot, position)[])) _localctx.decl_3__4.result), (position) (position) mkpos((IToken) _localctx.decl_3__1));
				            
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ToplevelContext : ParserRuleContext {
		public definition result;
		public DefContext toplevel_0__1;
		public DeclContext toplevel_1__1;
		public LexerdefContext toplevel_2__1;
		public IToken toplevel_3__1;
		public Slist_o__i__s__i__s_identstr_p_Context toplevel_3__2;
		[System.Diagnostics.DebuggerNonUserCode] public DefContext def() {
			return GetRuleContext<DefContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public DeclContext decl() {
			return GetRuleContext<DeclContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public LexerdefContext lexerdef() {
			return GetRuleContext<LexerdefContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_identstr_p_Context slist_o__i__s__i__s_identstr_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_identstr_p_Context>(0);
		}
		public ToplevelContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_toplevel; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterToplevel(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitToplevel(this);
		}
	}

	[RuleVersion(0)]
	public ToplevelContext toplevel() {
		ToplevelContext _localctx = new ToplevelContext(Context, State);
		EnterRule(_localctx, 46, RULE_toplevel);
		try {
			State = 334;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,15,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 321;
				_localctx.toplevel_0__1 = def();
				 _localctx.result =  _localctx.toplevel_0__1.result;
				            
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 324;
				_localctx.toplevel_1__1 = decl();
				 _localctx.result =  _localctx.toplevel_1__1.result;
				            
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 327;
				_localctx.toplevel_2__1 = lexerdef();
				 _localctx.result =  _localctx.toplevel_2__1.result;
				            
				}
				break;
			case 4:
				EnterOuterAlt(_localctx, 4);
				{
				State = 330;
				_localctx.toplevel_3__1 = Match(T__12);
				State = 331;
				_localctx.toplevel_3__2 = slist_o__i__s__i__s_identstr_p_(0);
				 _localctx.result =  (definition) MK_Defignore((string[]) _localctx.toplevel_3__2.result, (position) (position) mkpos((IToken) _localctx.toplevel_3__1));
				            
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Slist_o__i__s__i__s_identstr_p_Context : ParserRuleContext {
		public string[] result;
		public Slist_o__i__s__i__s_identstr_p_Context slist_o__i__s__i__s_identstr_p__1__1;
		public IdentstrContext slist_o__i__s__i__s_identstr_p__0__1;
		public IdentstrContext slist_o__i__s__i__s_identstr_p__1__3;
		[System.Diagnostics.DebuggerNonUserCode] public IdentstrContext identstr() {
			return GetRuleContext<IdentstrContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_identstr_p_Context slist_o__i__s__i__s_identstr_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_identstr_p_Context>(0);
		}
		public Slist_o__i__s__i__s_identstr_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slist_o__i__s__i__s_identstr_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterSlist_o__i__s__i__s_identstr_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitSlist_o__i__s__i__s_identstr_p_(this);
		}
	}

	[RuleVersion(0)]
	public Slist_o__i__s__i__s_identstr_p_Context slist_o__i__s__i__s_identstr_p_() {
		return slist_o__i__s__i__s_identstr_p_(0);
	}

	private Slist_o__i__s__i__s_identstr_p_Context slist_o__i__s__i__s_identstr_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Slist_o__i__s__i__s_identstr_p_Context _localctx = new Slist_o__i__s__i__s_identstr_p_Context(Context, _parentState);
		Slist_o__i__s__i__s_identstr_p_Context _prevctx = _localctx;
		int _startState = 48;
		EnterRecursionRule(_localctx, 48, RULE_slist_o__i__s__i__s_identstr_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 337;
			_localctx.slist_o__i__s__i__s_identstr_p__0__1 = identstr();
			 _localctx.result =  new string[] { _localctx.slist_o__i__s__i__s_identstr_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 347;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,16,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Slist_o__i__s__i__s_identstr_p_Context(_parentctx, _parentState);
					_localctx.slist_o__i__s__i__s_identstr_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_slist_o__i__s__i__s_identstr_p_);
					State = 340;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 341;
					Match(T__0);
					State = 342;
					_localctx.slist_o__i__s__i__s_identstr_p__1__3 = identstr();
					 _localctx.result =  (string[]) addList<string>((string[]) _localctx.slist_o__i__s__i__s_identstr_p__1__1.result, (string) _localctx.slist_o__i__s__i__s_identstr_p__1__3.result);
					                      
					}
					} 
				}
				State = 349;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,16,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class DefContext : ParserRuleContext {
		public definition result;
		public IToken def_0__1;
		public Slist_o__i__s__i__s_identstr_p_Context def_0__3;
		public ProductionsContext def_0__5;
		public IToken def_1__1;
		public ProductionsContext def_1__2;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CNAMEPLUS() { return GetToken(TypedBNFParser.CNAMEPLUS, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_identstr_p_Context slist_o__i__s__i__s_identstr_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_identstr_p_Context>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ProductionsContext productions() {
			return GetRuleContext<ProductionsContext>(0);
		}
		public DefContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_def; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterDef(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitDef(this);
		}
	}

	[RuleVersion(0)]
	public DefContext def() {
		DefContext _localctx = new DefContext(Context, State);
		EnterRule(_localctx, 50, RULE_def);
		try {
			State = 361;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,17,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 350;
				_localctx.def_0__1 = Match(CNAMEPLUS);
				State = 351;
				Match(T__2);
				State = 352;
				_localctx.def_0__3 = slist_o__i__s__i__s_identstr_p_(0);
				State = 353;
				Match(T__3);
				State = 354;
				_localctx.def_0__5 = productions(0);
				 _localctx.result =  (definition) MK_Defmacro((string) (string) str((IToken) _localctx.def_0__1), (string[]) _localctx.def_0__3.result, ((position, production)[]) _localctx.def_0__5.result, (position) (position) mkpos((IToken) _localctx.def_0__1));
				            
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 357;
				_localctx.def_1__1 = Match(CNAMEPLUS);
				State = 358;
				_localctx.def_1__2 = productions(0);
				 _localctx.result =  (definition) MK_Defrule((string) (string) str((IToken) _localctx.def_1__1), ((position, production)[]) _localctx.def_1__2.result, (position) (position) mkpos((IToken) _localctx.def_1__1));
				            
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ProductionsContext : ParserRuleContext {
		public (position, production)[] result;
		public ProductionsContext productions_1__1;
		public IToken productions_0__1;
		public ProductionContext productions_0__2;
		public IToken productions_1__2;
		public ProductionContext productions_1__3;
		[System.Diagnostics.DebuggerNonUserCode] public ProductionContext production() {
			return GetRuleContext<ProductionContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ProductionsContext productions() {
			return GetRuleContext<ProductionsContext>(0);
		}
		public ProductionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_productions; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterProductions(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitProductions(this);
		}
	}

	[RuleVersion(0)]
	public ProductionsContext productions() {
		return productions(0);
	}

	private ProductionsContext productions(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		ProductionsContext _localctx = new ProductionsContext(Context, _parentState);
		ProductionsContext _prevctx = _localctx;
		int _startState = 52;
		EnterRecursionRule(_localctx, 52, RULE_productions, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 364;
			_localctx.productions_0__1 = Match(T__7);
			State = 365;
			_localctx.productions_0__2 = production();
			 _localctx.result =  new (position, production)[] { ((position) mkpos((IToken) _localctx.productions_0__1), _localctx.productions_0__2.result) };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 375;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,18,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new ProductionsContext(_parentctx, _parentState);
					_localctx.productions_1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_productions);
					State = 368;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 369;
					_localctx.productions_1__2 = Match(T__13);
					State = 370;
					_localctx.productions_1__3 = production();
					 _localctx.result =  ((position, production)[]) addList<(position, production)>(((position, production)[]) _localctx.productions_1__1.result, ((position, production)) ((position) mkpos((IToken) _localctx.productions_1__2), _localctx.productions_1__3.result));
					                      
					}
					} 
				}
				State = 377;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,18,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class List_o_psym_p_Context : ParserRuleContext {
		public symbol[] result;
		public List_o_psym_p_Context list_o_psym_p__1__1;
		public PsymContext list_o_psym_p__0__1;
		public PsymContext list_o_psym_p__1__2;
		[System.Diagnostics.DebuggerNonUserCode] public PsymContext psym() {
			return GetRuleContext<PsymContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public List_o_psym_p_Context list_o_psym_p_() {
			return GetRuleContext<List_o_psym_p_Context>(0);
		}
		public List_o_psym_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_list_o_psym_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterList_o_psym_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitList_o_psym_p_(this);
		}
	}

	[RuleVersion(0)]
	public List_o_psym_p_Context list_o_psym_p_() {
		return list_o_psym_p_(0);
	}

	private List_o_psym_p_Context list_o_psym_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		List_o_psym_p_Context _localctx = new List_o_psym_p_Context(Context, _parentState);
		List_o_psym_p_Context _prevctx = _localctx;
		int _startState = 54;
		EnterRecursionRule(_localctx, 54, RULE_list_o_psym_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 379;
			_localctx.list_o_psym_p__0__1 = psym();
			 _localctx.result =  new symbol[] { _localctx.list_o_psym_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 388;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,19,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new List_o_psym_p_Context(_parentctx, _parentState);
					_localctx.list_o_psym_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_list_o_psym_p_);
					State = 382;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 383;
					_localctx.list_o_psym_p__1__2 = psym();
					 _localctx.result =  (symbol[]) addList<symbol>((symbol[]) _localctx.list_o_psym_p__1__1.result, (symbol) _localctx.list_o_psym_p__1__2.result);
					                      
					}
					} 
				}
				State = 390;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,19,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Empty_o_list_o_psym_p__p_Context : ParserRuleContext {
		public symbol[] result;
		public List_o_psym_p_Context empty_o_list_o_psym_p__p__1__1;
		[System.Diagnostics.DebuggerNonUserCode] public List_o_psym_p_Context list_o_psym_p_() {
			return GetRuleContext<List_o_psym_p_Context>(0);
		}
		public Empty_o_list_o_psym_p__p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_empty_o_list_o_psym_p__p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterEmpty_o_list_o_psym_p__p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitEmpty_o_list_o_psym_p__p_(this);
		}
	}

	[RuleVersion(0)]
	public Empty_o_list_o_psym_p__p_Context empty_o_list_o_psym_p__p_() {
		Empty_o_list_o_psym_p__p_Context _localctx = new Empty_o_list_o_psym_p__p_Context(Context, State);
		EnterRule(_localctx, 56, RULE_empty_o_list_o_psym_p__p_);
		try {
			State = 395;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__14:
				EnterOuterAlt(_localctx, 1);
				{
				 _localctx.result =  new symbol[] {  };
				            
				}
				break;
			case T__4:
			case CNAMEPLUS:
			case ESCAPED_STRING:
				EnterOuterAlt(_localctx, 2);
				{
				State = 392;
				_localctx.empty_o_list_o_psym_p__p__1__1 = list_o_psym_p_(0);
				 _localctx.result =  _localctx.empty_o_list_o_psym_p__p__1__1.result;
				            
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Elist_o_psym_p_Context : ParserRuleContext {
		public symbol[] result;
		public Empty_o_list_o_psym_p__p_Context elist_o_psym_p__0__1;
		[System.Diagnostics.DebuggerNonUserCode] public Empty_o_list_o_psym_p__p_Context empty_o_list_o_psym_p__p_() {
			return GetRuleContext<Empty_o_list_o_psym_p__p_Context>(0);
		}
		public Elist_o_psym_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_elist_o_psym_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterElist_o_psym_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitElist_o_psym_p_(this);
		}
	}

	[RuleVersion(0)]
	public Elist_o_psym_p_Context elist_o_psym_p_() {
		Elist_o_psym_p_Context _localctx = new Elist_o_psym_p_Context(Context, State);
		EnterRule(_localctx, 58, RULE_elist_o_psym_p_);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 397;
			_localctx.elist_o_psym_p__0__1 = empty_o_list_o_psym_p__p_();
			 _localctx.result =  _localctx.elist_o_psym_p__0__1.result;
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ProductionContext : ParserRuleContext {
		public production result;
		public Elist_o_psym_p_Context production_0__1;
		public ExprContext production_0__3;
		[System.Diagnostics.DebuggerNonUserCode] public Elist_o_psym_p_Context elist_o_psym_p_() {
			return GetRuleContext<Elist_o_psym_p_Context>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExprContext expr() {
			return GetRuleContext<ExprContext>(0);
		}
		public ProductionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_production; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterProduction(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitProduction(this);
		}
	}

	[RuleVersion(0)]
	public ProductionContext production() {
		ProductionContext _localctx = new ProductionContext(Context, State);
		EnterRule(_localctx, 60, RULE_production);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 400;
			_localctx.production_0__1 = elist_o_psym_p_();
			State = 401;
			Match(T__14);
			State = 402;
			_localctx.production_0__3 = expr();
			State = 403;
			Match(T__15);
			 _localctx.result =  (production) MK_production((symbol[]) _localctx.production_0__1.result, (expr) _localctx.production_0__3.result);
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Slist_o__i__s__i__s_psym_p_Context : ParserRuleContext {
		public symbol[] result;
		public Slist_o__i__s__i__s_psym_p_Context slist_o__i__s__i__s_psym_p__1__1;
		public PsymContext slist_o__i__s__i__s_psym_p__0__1;
		public PsymContext slist_o__i__s__i__s_psym_p__1__3;
		[System.Diagnostics.DebuggerNonUserCode] public PsymContext psym() {
			return GetRuleContext<PsymContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_psym_p_Context slist_o__i__s__i__s_psym_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_psym_p_Context>(0);
		}
		public Slist_o__i__s__i__s_psym_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slist_o__i__s__i__s_psym_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterSlist_o__i__s__i__s_psym_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitSlist_o__i__s__i__s_psym_p_(this);
		}
	}

	[RuleVersion(0)]
	public Slist_o__i__s__i__s_psym_p_Context slist_o__i__s__i__s_psym_p_() {
		return slist_o__i__s__i__s_psym_p_(0);
	}

	private Slist_o__i__s__i__s_psym_p_Context slist_o__i__s__i__s_psym_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Slist_o__i__s__i__s_psym_p_Context _localctx = new Slist_o__i__s__i__s_psym_p_Context(Context, _parentState);
		Slist_o__i__s__i__s_psym_p_Context _prevctx = _localctx;
		int _startState = 62;
		EnterRecursionRule(_localctx, 62, RULE_slist_o__i__s__i__s_psym_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 407;
			_localctx.slist_o__i__s__i__s_psym_p__0__1 = psym();
			 _localctx.result =  new symbol[] { _localctx.slist_o__i__s__i__s_psym_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 417;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,21,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Slist_o__i__s__i__s_psym_p_Context(_parentctx, _parentState);
					_localctx.slist_o__i__s__i__s_psym_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_slist_o__i__s__i__s_psym_p_);
					State = 410;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 411;
					Match(T__0);
					State = 412;
					_localctx.slist_o__i__s__i__s_psym_p__1__3 = psym();
					 _localctx.result =  (symbol[]) addList<symbol>((symbol[]) _localctx.slist_o__i__s__i__s_psym_p__1__1.result, (symbol) _localctx.slist_o__i__s__i__s_psym_p__1__3.result);
					                      
					}
					} 
				}
				State = 419;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,21,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class PsymContext : ParserRuleContext {
		public symbol result;
		public IdentstrContext psym_0__2;
		public IToken psym_1__1;
		public IdentstrContext psym_2__1;
		public IToken psym_3__1;
		public Slist_o__i__s__i__s_psym_p_Context psym_3__3;
		[System.Diagnostics.DebuggerNonUserCode] public IdentstrContext identstr() {
			return GetRuleContext<IdentstrContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode ESCAPED_STRING() { return GetToken(TypedBNFParser.ESCAPED_STRING, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CNAMEPLUS() { return GetToken(TypedBNFParser.CNAMEPLUS, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_psym_p_Context slist_o__i__s__i__s_psym_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_psym_p_Context>(0);
		}
		public PsymContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_psym; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterPsym(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitPsym(this);
		}
	}

	[RuleVersion(0)]
	public PsymContext psym() {
		PsymContext _localctx = new PsymContext(Context, State);
		EnterRule(_localctx, 64, RULE_psym);
		try {
			State = 436;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,22,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 420;
				Match(T__4);
				State = 421;
				_localctx.psym_0__2 = identstr();
				State = 422;
				Match(T__5);
				 _localctx.result =  (symbol) MK_Term((string) _localctx.psym_0__2.result, (bool) false);
				            
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 425;
				_localctx.psym_1__1 = Match(ESCAPED_STRING);
				 _localctx.result =  (symbol) MK_Term((string) (string) unescape((string) (string) str((IToken) _localctx.psym_1__1)), (bool) true);
				            
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 427;
				_localctx.psym_2__1 = identstr();
				 _localctx.result =  (symbol) MK_Nonterm((string) _localctx.psym_2__1.result);
				            
				}
				break;
			case 4:
				EnterOuterAlt(_localctx, 4);
				{
				State = 430;
				_localctx.psym_3__1 = Match(CNAMEPLUS);
				State = 431;
				Match(T__2);
				State = 432;
				_localctx.psym_3__3 = slist_o__i__s__i__s_psym_p_(0);
				State = 433;
				Match(T__3);
				 _localctx.result =  (symbol) MK_Macrocall((string) (string) str((IToken) _localctx.psym_3__1), (symbol[]) _localctx.psym_3__3.result, (position) (position) mkpos((IToken) _localctx.psym_3__1));
				            
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AnnContext : ParserRuleContext {
		public (string, monot) result;
		public IdentstrContext ann_0__1;
		public TypContext ann_0__3;
		[System.Diagnostics.DebuggerNonUserCode] public IdentstrContext identstr() {
			return GetRuleContext<IdentstrContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TypContext typ() {
			return GetRuleContext<TypContext>(0);
		}
		public AnnContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_ann; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterAnn(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitAnn(this);
		}
	}

	[RuleVersion(0)]
	public AnnContext ann() {
		AnnContext _localctx = new AnnContext(Context, State);
		EnterRule(_localctx, 66, RULE_ann);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 438;
			_localctx.ann_0__1 = identstr();
			State = 439;
			Match(T__7);
			State = 440;
			_localctx.ann_0__3 = typ();
			 _localctx.result =  (_localctx.ann_0__1.result, _localctx.ann_0__3.result);
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Slist_o__i__s__i__s_ann_p_Context : ParserRuleContext {
		public (string, monot)[] result;
		public Slist_o__i__s__i__s_ann_p_Context slist_o__i__s__i__s_ann_p__1__1;
		public AnnContext slist_o__i__s__i__s_ann_p__0__1;
		public AnnContext slist_o__i__s__i__s_ann_p__1__3;
		[System.Diagnostics.DebuggerNonUserCode] public AnnContext ann() {
			return GetRuleContext<AnnContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_ann_p_Context slist_o__i__s__i__s_ann_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_ann_p_Context>(0);
		}
		public Slist_o__i__s__i__s_ann_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slist_o__i__s__i__s_ann_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterSlist_o__i__s__i__s_ann_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitSlist_o__i__s__i__s_ann_p_(this);
		}
	}

	[RuleVersion(0)]
	public Slist_o__i__s__i__s_ann_p_Context slist_o__i__s__i__s_ann_p_() {
		return slist_o__i__s__i__s_ann_p_(0);
	}

	private Slist_o__i__s__i__s_ann_p_Context slist_o__i__s__i__s_ann_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Slist_o__i__s__i__s_ann_p_Context _localctx = new Slist_o__i__s__i__s_ann_p_Context(Context, _parentState);
		Slist_o__i__s__i__s_ann_p_Context _prevctx = _localctx;
		int _startState = 68;
		EnterRecursionRule(_localctx, 68, RULE_slist_o__i__s__i__s_ann_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 444;
			_localctx.slist_o__i__s__i__s_ann_p__0__1 = ann();
			 _localctx.result =  new (string, monot)[] { _localctx.slist_o__i__s__i__s_ann_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 454;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,23,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Slist_o__i__s__i__s_ann_p_Context(_parentctx, _parentState);
					_localctx.slist_o__i__s__i__s_ann_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_slist_o__i__s__i__s_ann_p_);
					State = 447;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 448;
					Match(T__0);
					State = 449;
					_localctx.slist_o__i__s__i__s_ann_p__1__3 = ann();
					 _localctx.result =  ((string, monot)[]) addList<(string, monot)>(((string, monot)[]) _localctx.slist_o__i__s__i__s_ann_p__1__1.result, ((string, monot)) _localctx.slist_o__i__s__i__s_ann_p__1__3.result);
					                      
					}
					} 
				}
				State = 456;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,23,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Empty_o_slist_o__i__s__i__s_ann_p__p_Context : ParserRuleContext {
		public (string, monot)[] result;
		public Slist_o__i__s__i__s_ann_p_Context empty_o_slist_o__i__s__i__s_ann_p__p__1__1;
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_ann_p_Context slist_o__i__s__i__s_ann_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_ann_p_Context>(0);
		}
		public Empty_o_slist_o__i__s__i__s_ann_p__p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_empty_o_slist_o__i__s__i__s_ann_p__p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterEmpty_o_slist_o__i__s__i__s_ann_p__p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitEmpty_o_slist_o__i__s__i__s_ann_p__p_(this);
		}
	}

	[RuleVersion(0)]
	public Empty_o_slist_o__i__s__i__s_ann_p__p_Context empty_o_slist_o__i__s__i__s_ann_p__p_() {
		Empty_o_slist_o__i__s__i__s_ann_p__p_Context _localctx = new Empty_o_slist_o__i__s__i__s_ann_p__p_Context(Context, State);
		EnterRule(_localctx, 70, RULE_empty_o_slist_o__i__s__i__s_ann_p__p_);
		try {
			State = 461;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__3:
				EnterOuterAlt(_localctx, 1);
				{
				 _localctx.result =  new (string, monot)[] {  };
				            
				}
				break;
			case CNAMEPLUS:
				EnterOuterAlt(_localctx, 2);
				{
				State = 458;
				_localctx.empty_o_slist_o__i__s__i__s_ann_p__p__1__1 = slist_o__i__s__i__s_ann_p_(0);
				 _localctx.result =  _localctx.empty_o_slist_o__i__s__i__s_ann_p__p__1__1.result;
				            
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Eslist_o__i__s__i__s_ann_p_Context : ParserRuleContext {
		public (string, monot)[] result;
		public Empty_o_slist_o__i__s__i__s_ann_p__p_Context eslist_o__i__s__i__s_ann_p__0__1;
		[System.Diagnostics.DebuggerNonUserCode] public Empty_o_slist_o__i__s__i__s_ann_p__p_Context empty_o_slist_o__i__s__i__s_ann_p__p_() {
			return GetRuleContext<Empty_o_slist_o__i__s__i__s_ann_p__p_Context>(0);
		}
		public Eslist_o__i__s__i__s_ann_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_eslist_o__i__s__i__s_ann_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterEslist_o__i__s__i__s_ann_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitEslist_o__i__s__i__s_ann_p_(this);
		}
	}

	[RuleVersion(0)]
	public Eslist_o__i__s__i__s_ann_p_Context eslist_o__i__s__i__s_ann_p_() {
		Eslist_o__i__s__i__s_ann_p_Context _localctx = new Eslist_o__i__s__i__s_ann_p_Context(Context, State);
		EnterRule(_localctx, 72, RULE_eslist_o__i__s__i__s_ann_p_);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 463;
			_localctx.eslist_o__i__s__i__s_ann_p__0__1 = empty_o_slist_o__i__s__i__s_ann_p__p_();
			 _localctx.result =  _localctx.eslist_o__i__s__i__s_ann_p__0__1.result;
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Func_parametersContext : ParserRuleContext {
		public (string, monot)[] result;
		public Eslist_o__i__s__i__s_ann_p_Context func_parameters_0__2;
		[System.Diagnostics.DebuggerNonUserCode] public Eslist_o__i__s__i__s_ann_p_Context eslist_o__i__s__i__s_ann_p_() {
			return GetRuleContext<Eslist_o__i__s__i__s_ann_p_Context>(0);
		}
		public Func_parametersContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_func_parameters; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterFunc_parameters(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitFunc_parameters(this);
		}
	}

	[RuleVersion(0)]
	public Func_parametersContext func_parameters() {
		Func_parametersContext _localctx = new Func_parametersContext(Context, State);
		EnterRule(_localctx, 74, RULE_func_parameters);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 466;
			Match(T__2);
			State = 467;
			_localctx.func_parameters_0__2 = eslist_o__i__s__i__s_ann_p_();
			State = 468;
			Match(T__3);
			 _localctx.result =  _localctx.func_parameters_0__2.result;
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExprContext : ParserRuleContext {
		public expr result;
		public IToken expr_0__1;
		public IdentstrContext expr_0__2;
		public ExprContext expr_0__4;
		public ExprContext expr_0__6;
		public IToken expr_1__1;
		public Func_parametersContext expr_1__2;
		public ExprContext expr_1__4;
		public CallContext expr_2__1;
		public CallContext expr_3__1;
		public ExprContext expr_3__3;
		[System.Diagnostics.DebuggerNonUserCode] public IdentstrContext identstr() {
			return GetRuleContext<IdentstrContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExprContext[] expr() {
			return GetRuleContexts<ExprContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExprContext expr(int i) {
			return GetRuleContext<ExprContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Func_parametersContext func_parameters() {
			return GetRuleContext<Func_parametersContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CallContext call() {
			return GetRuleContext<CallContext>(0);
		}
		public ExprContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_expr; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterExpr(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitExpr(this);
		}
	}

	[RuleVersion(0)]
	public ExprContext expr() {
		ExprContext _localctx = new ExprContext(Context, State);
		EnterRule(_localctx, 76, RULE_expr);
		try {
			State = 493;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,25,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 471;
				_localctx.expr_0__1 = Match(T__16);
				State = 472;
				_localctx.expr_0__2 = identstr();
				State = 473;
				Match(T__17);
				State = 474;
				_localctx.expr_0__4 = expr();
				State = 475;
				Match(T__18);
				State = 476;
				_localctx.expr_0__6 = expr();
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_ELet((string) _localctx.expr_0__2.result, (expr) _localctx.expr_0__4.result, (expr) _localctx.expr_0__6.result), (position) (position) mkpos((IToken) _localctx.expr_0__1));
				            
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 479;
				_localctx.expr_1__1 = Match(T__19);
				State = 480;
				_localctx.expr_1__2 = func_parameters();
				State = 481;
				Match(T__1);
				State = 482;
				_localctx.expr_1__4 = expr();
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_EFun(((string, monot)[]) _localctx.expr_1__2.result, (expr) _localctx.expr_1__4.result), (position) (position) mkpos((IToken) _localctx.expr_1__1));
				            
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 485;
				_localctx.expr_2__1 = call(0);
				 _localctx.result =  _localctx.expr_2__1.result;
				            
				}
				break;
			case 4:
				EnterOuterAlt(_localctx, 4);
				{
				State = 488;
				_localctx.expr_3__1 = call(0);
				State = 489;
				Match(T__20);
				State = 490;
				_localctx.expr_3__3 = expr();
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_ELet((string) "_", (expr) _localctx.expr_3__1.result, (expr) _localctx.expr_3__3.result), (position) (position) getpos((expr) _localctx.expr_3__1.result));
				            
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CallContext : ParserRuleContext {
		public expr result;
		public CallContext call_0__1;
		public AtomexpContext call_1__1;
		public Eslist_o__i__s__i__s_expr_p_Context call_0__3;
		[System.Diagnostics.DebuggerNonUserCode] public AtomexpContext atomexp() {
			return GetRuleContext<AtomexpContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CallContext call() {
			return GetRuleContext<CallContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Eslist_o__i__s__i__s_expr_p_Context eslist_o__i__s__i__s_expr_p_() {
			return GetRuleContext<Eslist_o__i__s__i__s_expr_p_Context>(0);
		}
		public CallContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_call; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterCall(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitCall(this);
		}
	}

	[RuleVersion(0)]
	public CallContext call() {
		return call(0);
	}

	private CallContext call(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		CallContext _localctx = new CallContext(Context, _parentState);
		CallContext _prevctx = _localctx;
		int _startState = 78;
		EnterRecursionRule(_localctx, 78, RULE_call, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 496;
			_localctx.call_1__1 = atomexp(0);
			 _localctx.result =  _localctx.call_1__1.result;
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 507;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,26,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new CallContext(_parentctx, _parentState);
					_localctx.call_0__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_call);
					State = 499;
					if (!(Precpred(Context, 2))) throw new FailedPredicateException(this, "Precpred(Context, 2)");
					State = 500;
					Match(T__2);
					State = 501;
					_localctx.call_0__3 = eslist_o__i__s__i__s_expr_p_();
					State = 502;
					Match(T__3);
					 _localctx.result =  (expr) MK_Expr((node) (node) MK_EApp((expr) _localctx.call_0__1.result, (expr[]) _localctx.call_0__3.result), (position) (position) getpos((expr) _localctx.call_0__1.result));
					                      
					}
					} 
				}
				State = 509;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,26,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Empty_o_slist_o__i__s__i__s_expr_p__p_Context : ParserRuleContext {
		public expr[] result;
		public Slist_o__i__s__i__s_expr_p_Context empty_o_slist_o__i__s__i__s_expr_p__p__1__1;
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_expr_p_Context slist_o__i__s__i__s_expr_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_expr_p_Context>(0);
		}
		public Empty_o_slist_o__i__s__i__s_expr_p__p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_empty_o_slist_o__i__s__i__s_expr_p__p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterEmpty_o_slist_o__i__s__i__s_expr_p__p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitEmpty_o_slist_o__i__s__i__s_expr_p__p_(this);
		}
	}

	[RuleVersion(0)]
	public Empty_o_slist_o__i__s__i__s_expr_p__p_Context empty_o_slist_o__i__s__i__s_expr_p__p_() {
		Empty_o_slist_o__i__s__i__s_expr_p__p_Context _localctx = new Empty_o_slist_o__i__s__i__s_expr_p__p_Context(Context, State);
		EnterRule(_localctx, 80, RULE_empty_o_slist_o__i__s__i__s_expr_p__p_);
		try {
			State = 514;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case T__3:
			case T__23:
				EnterOuterAlt(_localctx, 1);
				{
				 _localctx.result =  new expr[] {  };
				            
				}
				break;
			case T__2:
			case T__16:
			case T__19:
			case T__21:
			case T__22:
			case T__25:
			case T__26:
			case CNAMEPLUS:
			case INT:
			case FLOAT:
			case ESCAPED_STRING:
				EnterOuterAlt(_localctx, 2);
				{
				State = 511;
				_localctx.empty_o_slist_o__i__s__i__s_expr_p__p__1__1 = slist_o__i__s__i__s_expr_p_(0);
				 _localctx.result =  _localctx.empty_o_slist_o__i__s__i__s_expr_p__p__1__1.result;
				            
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Eslist_o__i__s__i__s_expr_p_Context : ParserRuleContext {
		public expr[] result;
		public Empty_o_slist_o__i__s__i__s_expr_p__p_Context eslist_o__i__s__i__s_expr_p__0__1;
		[System.Diagnostics.DebuggerNonUserCode] public Empty_o_slist_o__i__s__i__s_expr_p__p_Context empty_o_slist_o__i__s__i__s_expr_p__p_() {
			return GetRuleContext<Empty_o_slist_o__i__s__i__s_expr_p__p_Context>(0);
		}
		public Eslist_o__i__s__i__s_expr_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_eslist_o__i__s__i__s_expr_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterEslist_o__i__s__i__s_expr_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitEslist_o__i__s__i__s_expr_p_(this);
		}
	}

	[RuleVersion(0)]
	public Eslist_o__i__s__i__s_expr_p_Context eslist_o__i__s__i__s_expr_p_() {
		Eslist_o__i__s__i__s_expr_p_Context _localctx = new Eslist_o__i__s__i__s_expr_p_Context(Context, State);
		EnterRule(_localctx, 82, RULE_eslist_o__i__s__i__s_expr_p_);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 516;
			_localctx.eslist_o__i__s__i__s_expr_p__0__1 = empty_o_slist_o__i__s__i__s_expr_p__p_();
			 _localctx.result =  _localctx.eslist_o__i__s__i__s_expr_p__0__1.result;
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Slist_o__i__s__i__s_expr_p_Context : ParserRuleContext {
		public expr[] result;
		public Slist_o__i__s__i__s_expr_p_Context slist_o__i__s__i__s_expr_p__1__1;
		public ExprContext slist_o__i__s__i__s_expr_p__0__1;
		public ExprContext slist_o__i__s__i__s_expr_p__1__3;
		[System.Diagnostics.DebuggerNonUserCode] public ExprContext expr() {
			return GetRuleContext<ExprContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_expr_p_Context slist_o__i__s__i__s_expr_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_expr_p_Context>(0);
		}
		public Slist_o__i__s__i__s_expr_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slist_o__i__s__i__s_expr_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterSlist_o__i__s__i__s_expr_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitSlist_o__i__s__i__s_expr_p_(this);
		}
	}

	[RuleVersion(0)]
	public Slist_o__i__s__i__s_expr_p_Context slist_o__i__s__i__s_expr_p_() {
		return slist_o__i__s__i__s_expr_p_(0);
	}

	private Slist_o__i__s__i__s_expr_p_Context slist_o__i__s__i__s_expr_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Slist_o__i__s__i__s_expr_p_Context _localctx = new Slist_o__i__s__i__s_expr_p_Context(Context, _parentState);
		Slist_o__i__s__i__s_expr_p_Context _prevctx = _localctx;
		int _startState = 84;
		EnterRecursionRule(_localctx, 84, RULE_slist_o__i__s__i__s_expr_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 520;
			_localctx.slist_o__i__s__i__s_expr_p__0__1 = expr();
			 _localctx.result =  new expr[] { _localctx.slist_o__i__s__i__s_expr_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 530;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,28,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Slist_o__i__s__i__s_expr_p_Context(_parentctx, _parentState);
					_localctx.slist_o__i__s__i__s_expr_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_slist_o__i__s__i__s_expr_p_);
					State = 523;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 524;
					Match(T__0);
					State = 525;
					_localctx.slist_o__i__s__i__s_expr_p__1__3 = expr();
					 _localctx.result =  (expr[]) addList<expr>((expr[]) _localctx.slist_o__i__s__i__s_expr_p__1__1.result, (expr) _localctx.slist_o__i__s__i__s_expr_p__1__3.result);
					                      
					}
					} 
				}
				State = 532;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,28,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class AtomexpContext : ParserRuleContext {
		public expr result;
		public AtomexpContext atomexp_8__1;
		public IToken atomexp_0__1;
		public IToken atomexp_1__1;
		public IToken atomexp_2__1;
		public IToken atomexp_3__1;
		public IToken atomexp_3__2;
		public IToken atomexp_4__1;
		public Eslist_o__i__s__i__s_expr_p_Context atomexp_4__2;
		public IToken atomexp_5__1;
		public IToken atomexp_6__1;
		public Slist_o__i__s__i__s_expr_p_Context atomexp_6__2;
		public IToken atomexp_7__1;
		public IToken atomexp_9__1;
		public IToken atomexp_10__1;
		public IToken atomexp_8__3;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode INT() { return GetToken(TypedBNFParser.INT, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode FLOAT() { return GetToken(TypedBNFParser.FLOAT, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode ESCAPED_STRING() { return GetToken(TypedBNFParser.ESCAPED_STRING, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public Eslist_o__i__s__i__s_expr_p_Context eslist_o__i__s__i__s_expr_p_() {
			return GetRuleContext<Eslist_o__i__s__i__s_expr_p_Context>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__s__i__s_expr_p_Context slist_o__i__s__i__s_expr_p_() {
			return GetRuleContext<Slist_o__i__s__i__s_expr_p_Context>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CNAMEPLUS() { return GetToken(TypedBNFParser.CNAMEPLUS, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public AtomexpContext atomexp() {
			return GetRuleContext<AtomexpContext>(0);
		}
		public AtomexpContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_atomexp; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterAtomexp(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitAtomexp(this);
		}
	}

	[RuleVersion(0)]
	public AtomexpContext atomexp() {
		return atomexp(0);
	}

	private AtomexpContext atomexp(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		AtomexpContext _localctx = new AtomexpContext(Context, _parentState);
		AtomexpContext _prevctx = _localctx;
		int _startState = 86;
		EnterRecursionRule(_localctx, 86, RULE_atomexp, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			State = 562;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,29,Context) ) {
			case 1:
				{
				State = 534;
				_localctx.atomexp_0__1 = Match(INT);
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_EInt((int) (int) toint((IToken) _localctx.atomexp_0__1)), (position) (position) mkpos((IToken) _localctx.atomexp_0__1));
				            
				}
				break;
			case 2:
				{
				State = 536;
				_localctx.atomexp_1__1 = Match(FLOAT);
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_EFlt((double) (double) tofloat((IToken) _localctx.atomexp_1__1)), (position) (position) mkpos((IToken) _localctx.atomexp_1__1));
				            
				}
				break;
			case 3:
				{
				State = 538;
				_localctx.atomexp_2__1 = Match(ESCAPED_STRING);
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_EStr((string) (string) unescape((string) (string) str((IToken) _localctx.atomexp_2__1))), (position) (position) mkpos((IToken) _localctx.atomexp_2__1));
				            
				}
				break;
			case 4:
				{
				State = 540;
				_localctx.atomexp_3__1 = Match(T__21);
				State = 541;
				_localctx.atomexp_3__2 = Match(INT);
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_ESlot((int) (int) toint((IToken) _localctx.atomexp_3__2)), (position) (position) mkpos((IToken) _localctx.atomexp_3__1));
				            
				}
				break;
			case 5:
				{
				State = 543;
				_localctx.atomexp_4__1 = Match(T__22);
				State = 544;
				_localctx.atomexp_4__2 = eslist_o__i__s__i__s_expr_p_();
				State = 545;
				Match(T__23);
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_EList((expr[]) _localctx.atomexp_4__2.result), (position) (position) mkpos((IToken) _localctx.atomexp_4__1));
				            
				}
				break;
			case 6:
				{
				State = 548;
				_localctx.atomexp_5__1 = Match(T__2);
				State = 549;
				Match(T__3);
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_ETuple((expr[]) new expr[] {  }), (position) (position) mkpos((IToken) _localctx.atomexp_5__1));
				            
				}
				break;
			case 7:
				{
				State = 551;
				_localctx.atomexp_6__1 = Match(T__2);
				State = 552;
				_localctx.atomexp_6__2 = slist_o__i__s__i__s_expr_p_(0);
				State = 553;
				Match(T__3);
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_ETuple((expr[]) _localctx.atomexp_6__2.result), (position) (position) mkpos((IToken) _localctx.atomexp_6__1));
				            
				}
				break;
			case 8:
				{
				State = 556;
				_localctx.atomexp_7__1 = Match(CNAMEPLUS);
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_EVar((string) (string) str((IToken) _localctx.atomexp_7__1)), (position) (position) mkpos((IToken) _localctx.atomexp_7__1));
				            
				}
				break;
			case 9:
				{
				State = 558;
				_localctx.atomexp_9__1 = Match(T__25);
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_EBool((bool) true), (position) (position) mkpos((IToken) _localctx.atomexp_9__1));
				            
				}
				break;
			case 10:
				{
				State = 560;
				_localctx.atomexp_10__1 = Match(T__26);
				 _localctx.result =  (expr) MK_Expr((node) (node) MK_EBool((bool) false), (position) (position) mkpos((IToken) _localctx.atomexp_10__1));
				            
				}
				break;
			}
			Context.Stop = TokenStream.LT(-1);
			State = 570;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,30,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new AtomexpContext(_parentctx, _parentState);
					_localctx.atomexp_8__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_atomexp);
					State = 564;
					if (!(Precpred(Context, 3))) throw new FailedPredicateException(this, "Precpred(Context, 3)");
					State = 565;
					Match(T__24);
					State = 566;
					_localctx.atomexp_8__3 = Match(CNAMEPLUS);
					 _localctx.result =  (expr) MK_Expr((node) (node) MK_EField((expr) _localctx.atomexp_8__1.result, (string) (string) str((IToken) _localctx.atomexp_8__3)), (position) (position) getpos((expr) _localctx.atomexp_8__1.result));
					                      
					}
					} 
				}
				State = 572;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,30,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Slist_o__i__u__i__s_lexer_and_p_Context : ParserRuleContext {
		public lexerule[] result;
		public Slist_o__i__u__i__s_lexer_and_p_Context slist_o__i__u__i__s_lexer_and_p__1__1;
		public Lexer_andContext slist_o__i__u__i__s_lexer_and_p__0__1;
		public Lexer_andContext slist_o__i__u__i__s_lexer_and_p__1__3;
		[System.Diagnostics.DebuggerNonUserCode] public Lexer_andContext lexer_and() {
			return GetRuleContext<Lexer_andContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__u__i__s_lexer_and_p_Context slist_o__i__u__i__s_lexer_and_p_() {
			return GetRuleContext<Slist_o__i__u__i__s_lexer_and_p_Context>(0);
		}
		public Slist_o__i__u__i__s_lexer_and_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slist_o__i__u__i__s_lexer_and_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterSlist_o__i__u__i__s_lexer_and_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitSlist_o__i__u__i__s_lexer_and_p_(this);
		}
	}

	[RuleVersion(0)]
	public Slist_o__i__u__i__s_lexer_and_p_Context slist_o__i__u__i__s_lexer_and_p_() {
		return slist_o__i__u__i__s_lexer_and_p_(0);
	}

	private Slist_o__i__u__i__s_lexer_and_p_Context slist_o__i__u__i__s_lexer_and_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Slist_o__i__u__i__s_lexer_and_p_Context _localctx = new Slist_o__i__u__i__s_lexer_and_p_Context(Context, _parentState);
		Slist_o__i__u__i__s_lexer_and_p_Context _prevctx = _localctx;
		int _startState = 88;
		EnterRecursionRule(_localctx, 88, RULE_slist_o__i__u__i__s_lexer_and_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 574;
			_localctx.slist_o__i__u__i__s_lexer_and_p__0__1 = lexer_and();
			 _localctx.result =  new lexerule[] { _localctx.slist_o__i__u__i__s_lexer_and_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 584;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,31,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new Slist_o__i__u__i__s_lexer_and_p_Context(_parentctx, _parentState);
					_localctx.slist_o__i__u__i__s_lexer_and_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_slist_o__i__u__i__s_lexer_and_p_);
					State = 577;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 578;
					Match(T__13);
					State = 579;
					_localctx.slist_o__i__u__i__s_lexer_and_p__1__3 = lexer_and();
					 _localctx.result =  (lexerule[]) addList<lexerule>((lexerule[]) _localctx.slist_o__i__u__i__s_lexer_and_p__1__1.result, (lexerule) _localctx.slist_o__i__u__i__s_lexer_and_p__1__3.result);
					                      
					}
					} 
				}
				State = 586;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,31,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Lexer__y_Context : ParserRuleContext {
		public lexerule result;
		public Slist_o__i__u__i__s_lexer_and_p_Context lexer__y__0__1;
		[System.Diagnostics.DebuggerNonUserCode] public Slist_o__i__u__i__s_lexer_and_p_Context slist_o__i__u__i__s_lexer_and_p_() {
			return GetRuleContext<Slist_o__i__u__i__s_lexer_and_p_Context>(0);
		}
		public Lexer__y_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lexer__y_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterLexer__y_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitLexer__y_(this);
		}
	}

	[RuleVersion(0)]
	public Lexer__y_Context lexer__y_() {
		Lexer__y_Context _localctx = new Lexer__y_Context(Context, State);
		EnterRule(_localctx, 90, RULE_lexer__y_);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 587;
			_localctx.lexer__y__0__1 = slist_o__i__u__i__s_lexer_and_p_(0);
			 _localctx.result =  (lexerule) MK_LOr((lexerule[]) _localctx.lexer__y__0__1.result);
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class List_o_lexer_atomexpr_p_Context : ParserRuleContext {
		public lexerule[] result;
		public List_o_lexer_atomexpr_p_Context list_o_lexer_atomexpr_p__1__1;
		public Lexer_atomexprContext list_o_lexer_atomexpr_p__0__1;
		public Lexer_atomexprContext list_o_lexer_atomexpr_p__1__2;
		[System.Diagnostics.DebuggerNonUserCode] public Lexer_atomexprContext lexer_atomexpr() {
			return GetRuleContext<Lexer_atomexprContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public List_o_lexer_atomexpr_p_Context list_o_lexer_atomexpr_p_() {
			return GetRuleContext<List_o_lexer_atomexpr_p_Context>(0);
		}
		public List_o_lexer_atomexpr_p_Context(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_list_o_lexer_atomexpr_p_; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterList_o_lexer_atomexpr_p_(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitList_o_lexer_atomexpr_p_(this);
		}
	}

	[RuleVersion(0)]
	public List_o_lexer_atomexpr_p_Context list_o_lexer_atomexpr_p_() {
		return list_o_lexer_atomexpr_p_(0);
	}

	private List_o_lexer_atomexpr_p_Context list_o_lexer_atomexpr_p_(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		List_o_lexer_atomexpr_p_Context _localctx = new List_o_lexer_atomexpr_p_Context(Context, _parentState);
		List_o_lexer_atomexpr_p_Context _prevctx = _localctx;
		int _startState = 92;
		EnterRecursionRule(_localctx, 92, RULE_list_o_lexer_atomexpr_p_, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 591;
			_localctx.list_o_lexer_atomexpr_p__0__1 = lexer_atomexpr(0);
			 _localctx.result =  new lexerule[] { _localctx.list_o_lexer_atomexpr_p__0__1.result };
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 600;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,32,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					{
					_localctx = new List_o_lexer_atomexpr_p_Context(_parentctx, _parentState);
					_localctx.list_o_lexer_atomexpr_p__1__1 = _prevctx;
					PushNewRecursionContext(_localctx, _startState, RULE_list_o_lexer_atomexpr_p_);
					State = 594;
					if (!(Precpred(Context, 1))) throw new FailedPredicateException(this, "Precpred(Context, 1)");
					State = 595;
					_localctx.list_o_lexer_atomexpr_p__1__2 = lexer_atomexpr(0);
					 _localctx.result =  (lexerule[]) addList<lexerule>((lexerule[]) _localctx.list_o_lexer_atomexpr_p__1__1.result, (lexerule) _localctx.list_o_lexer_atomexpr_p__1__2.result);
					                      
					}
					} 
				}
				State = 602;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,32,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Lexer_andContext : ParserRuleContext {
		public lexerule result;
		public List_o_lexer_atomexpr_p_Context lexer_and_0__1;
		[System.Diagnostics.DebuggerNonUserCode] public List_o_lexer_atomexpr_p_Context list_o_lexer_atomexpr_p_() {
			return GetRuleContext<List_o_lexer_atomexpr_p_Context>(0);
		}
		public Lexer_andContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lexer_and; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterLexer_and(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitLexer_and(this);
		}
	}

	[RuleVersion(0)]
	public Lexer_andContext lexer_and() {
		Lexer_andContext _localctx = new Lexer_andContext(Context, State);
		EnterRule(_localctx, 94, RULE_lexer_and);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 603;
			_localctx.lexer_and_0__1 = list_o_lexer_atomexpr_p_(0);
			 _localctx.result =  (lexerule) MK_LSeq((lexerule[]) _localctx.lexer_and_0__1.result);
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Lexer_atomexprContext : ParserRuleContext {
		public lexerule result;
		public Lexer_atomexprContext lexer_atomexpr_0__1;
		public Lexer_atomexprContext lexer_atomexpr_1__1;
		public Lexer_atomexprContext lexer_atomexpr_2__1;
		public Lexer_atomContext lexer_atomexpr_3__1;
		[System.Diagnostics.DebuggerNonUserCode] public Lexer_atomContext lexer_atom() {
			return GetRuleContext<Lexer_atomContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Lexer_atomexprContext lexer_atomexpr() {
			return GetRuleContext<Lexer_atomexprContext>(0);
		}
		public Lexer_atomexprContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lexer_atomexpr; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterLexer_atomexpr(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitLexer_atomexpr(this);
		}
	}

	[RuleVersion(0)]
	public Lexer_atomexprContext lexer_atomexpr() {
		return lexer_atomexpr(0);
	}

	private Lexer_atomexprContext lexer_atomexpr(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		Lexer_atomexprContext _localctx = new Lexer_atomexprContext(Context, _parentState);
		Lexer_atomexprContext _prevctx = _localctx;
		int _startState = 96;
		EnterRecursionRule(_localctx, 96, RULE_lexer_atomexpr, _p);
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			{
			State = 607;
			_localctx.lexer_atomexpr_3__1 = lexer_atom();
			 _localctx.result =  _localctx.lexer_atomexpr_3__1.result;
			            
			}
			Context.Stop = TokenStream.LT(-1);
			State = 621;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,34,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					State = 619;
					ErrorHandler.Sync(this);
					switch ( Interpreter.AdaptivePredict(TokenStream,33,Context) ) {
					case 1:
						{
						_localctx = new Lexer_atomexprContext(_parentctx, _parentState);
						_localctx.lexer_atomexpr_0__1 = _prevctx;
						PushNewRecursionContext(_localctx, _startState, RULE_lexer_atomexpr);
						State = 610;
						if (!(Precpred(Context, 4))) throw new FailedPredicateException(this, "Precpred(Context, 4)");
						State = 611;
						Match(T__27);
						 _localctx.result =  (lexerule) MK_LPlus((lexerule) _localctx.lexer_atomexpr_0__1.result);
						                      
						}
						break;
					case 2:
						{
						_localctx = new Lexer_atomexprContext(_parentctx, _parentState);
						_localctx.lexer_atomexpr_1__1 = _prevctx;
						PushNewRecursionContext(_localctx, _startState, RULE_lexer_atomexpr);
						State = 613;
						if (!(Precpred(Context, 3))) throw new FailedPredicateException(this, "Precpred(Context, 3)");
						State = 614;
						Match(T__6);
						 _localctx.result =  (lexerule) MK_LStar((lexerule) _localctx.lexer_atomexpr_1__1.result);
						                      
						}
						break;
					case 3:
						{
						_localctx = new Lexer_atomexprContext(_parentctx, _parentState);
						_localctx.lexer_atomexpr_2__1 = _prevctx;
						PushNewRecursionContext(_localctx, _startState, RULE_lexer_atomexpr);
						State = 616;
						if (!(Precpred(Context, 2))) throw new FailedPredicateException(this, "Precpred(Context, 2)");
						State = 617;
						Match(T__28);
						 _localctx.result =  (lexerule) MK_LOptional((lexerule) _localctx.lexer_atomexpr_2__1.result);
						                      
						}
						break;
					}
					} 
				}
				State = 623;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,34,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class Lexer_atomContext : ParserRuleContext {
		public lexerule result;
		public IToken lexer_atom_0__1;
		public Lexer_atomContext lexer_atom_1__2;
		public Lexer__y_Context lexer_atom_2__2;
		public IToken lexer_atom_4__1;
		public IToken lexer_atom_5__1;
		public IToken lexer_atom_8__1;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode ESCAPED_STRING() { return GetToken(TypedBNFParser.ESCAPED_STRING, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public Lexer_atomContext lexer_atom() {
			return GetRuleContext<Lexer_atomContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public Lexer__y_Context lexer__y_() {
			return GetRuleContext<Lexer__y_Context>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode RANGE() { return GetToken(TypedBNFParser.RANGE, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode UNICODE_RANGE() { return GetToken(TypedBNFParser.UNICODE_RANGE, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CNAMEPLUS() { return GetToken(TypedBNFParser.CNAMEPLUS, 0); }
		public Lexer_atomContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lexer_atom; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterLexer_atom(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitLexer_atom(this);
		}
	}

	[RuleVersion(0)]
	public Lexer_atomContext lexer_atom() {
		Lexer_atomContext _localctx = new Lexer_atomContext(Context, State);
		EnterRule(_localctx, 98, RULE_lexer_atom);
		try {
			State = 647;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case ESCAPED_STRING:
				EnterOuterAlt(_localctx, 1);
				{
				State = 624;
				_localctx.lexer_atom_0__1 = Match(ESCAPED_STRING);
				 _localctx.result =  (lexerule) MK_LStr((string) (string) unescape((string) (string) str((IToken) _localctx.lexer_atom_0__1)));
				            
				}
				break;
			case T__29:
				EnterOuterAlt(_localctx, 2);
				{
				State = 626;
				Match(T__29);
				State = 627;
				_localctx.lexer_atom_1__2 = lexer_atom();
				 _localctx.result =  (lexerule) MK_LNot((lexerule) _localctx.lexer_atom_1__2.result);
				            
				}
				break;
			case T__2:
				EnterOuterAlt(_localctx, 3);
				{
				State = 630;
				Match(T__2);
				State = 631;
				_localctx.lexer_atom_2__2 = lexer__y_();
				State = 632;
				Match(T__3);
				 _localctx.result =  (lexerule) MK_LGroup((lexerule) _localctx.lexer_atom_2__2.result);
				            
				}
				break;
			case T__30:
				EnterOuterAlt(_localctx, 4);
				{
				State = 635;
				Match(T__30);
				 _localctx.result =  MK_LNumber;
				            
				}
				break;
			case RANGE:
				EnterOuterAlt(_localctx, 5);
				{
				State = 637;
				_localctx.lexer_atom_4__1 = Match(RANGE);
				 _localctx.result =  (lexerule) getrange((string) (string) str((IToken) _localctx.lexer_atom_4__1));
				            
				}
				break;
			case UNICODE_RANGE:
				EnterOuterAlt(_localctx, 6);
				{
				State = 639;
				_localctx.lexer_atom_5__1 = Match(UNICODE_RANGE);
				 _localctx.result =  (lexerule) getunicoderange((string) (string) str((IToken) _localctx.lexer_atom_5__1));
				            
				}
				break;
			case T__31:
				EnterOuterAlt(_localctx, 7);
				{
				State = 641;
				Match(T__31);
				 _localctx.result =  MK_LWildcard;
				            
				}
				break;
			case T__24:
				EnterOuterAlt(_localctx, 8);
				{
				State = 643;
				Match(T__24);
				 _localctx.result =  MK_LWildcard;
				            
				}
				break;
			case CNAMEPLUS:
				EnterOuterAlt(_localctx, 9);
				{
				State = 645;
				_localctx.lexer_atom_8__1 = Match(CNAMEPLUS);
				 _localctx.result =  (lexerule) MK_LRef((string) (string) str((IToken) _localctx.lexer_atom_8__1));
				            
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LexerdefContext : ParserRuleContext {
		public definition result;
		public IToken lexerdef_0__1;
		public Lexer__y_Context lexerdef_0__3;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode CNAMEPLUS() { return GetToken(TypedBNFParser.CNAMEPLUS, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public Lexer__y_Context lexer__y_() {
			return GetRuleContext<Lexer__y_Context>(0);
		}
		public LexerdefContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_lexerdef; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.EnterLexerdef(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			ITypedBNFListener typedListener = listener as ITypedBNFListener;
			if (typedListener != null) typedListener.ExitLexerdef(this);
		}
	}

	[RuleVersion(0)]
	public LexerdefContext lexerdef() {
		LexerdefContext _localctx = new LexerdefContext(Context, State);
		EnterRule(_localctx, 100, RULE_lexerdef);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 649;
			_localctx.lexerdef_0__1 = Match(CNAMEPLUS);
			State = 650;
			Match(T__17);
			State = 651;
			_localctx.lexerdef_0__3 = lexer__y_();
			State = 652;
			Match(T__20);
			 _localctx.result =  (definition) MK_Deflexer((string) (string) str((IToken) _localctx.lexerdef_0__1), (lexerule) _localctx.lexerdef_0__3.result, (position) (position) mkpos((IToken) _localctx.lexerdef_0__1));
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 1: return list_o_toplevel_p__sempred((List_o_toplevel_p_Context)_localctx, predIndex);
		case 5: return slist_o__i__s__i__s_param_type_p__sempred((Slist_o__i__s__i__s_param_type_p_Context)_localctx, predIndex);
		case 9: return slist_o__i__s__i__s_typ_p__sempred((Slist_o__i__s__i__s_typ_p_Context)_localctx, predIndex);
		case 10: return typ2_sempred((Typ2Context)_localctx, predIndex);
		case 11: return type_product_sempred((Type_productContext)_localctx, predIndex);
		case 15: return slist_o__i__s__i__s_tvar_str_p__sempred((Slist_o__i__s__i__s_tvar_str_p_Context)_localctx, predIndex);
		case 18: return slist_o__i__s__i__s_field_ann_p__sempred((Slist_o__i__s__i__s_field_ann_p_Context)_localctx, predIndex);
		case 24: return slist_o__i__s__i__s_identstr_p__sempred((Slist_o__i__s__i__s_identstr_p_Context)_localctx, predIndex);
		case 26: return productions_sempred((ProductionsContext)_localctx, predIndex);
		case 27: return list_o_psym_p__sempred((List_o_psym_p_Context)_localctx, predIndex);
		case 31: return slist_o__i__s__i__s_psym_p__sempred((Slist_o__i__s__i__s_psym_p_Context)_localctx, predIndex);
		case 34: return slist_o__i__s__i__s_ann_p__sempred((Slist_o__i__s__i__s_ann_p_Context)_localctx, predIndex);
		case 39: return call_sempred((CallContext)_localctx, predIndex);
		case 42: return slist_o__i__s__i__s_expr_p__sempred((Slist_o__i__s__i__s_expr_p_Context)_localctx, predIndex);
		case 43: return atomexp_sempred((AtomexpContext)_localctx, predIndex);
		case 44: return slist_o__i__u__i__s_lexer_and_p__sempred((Slist_o__i__u__i__s_lexer_and_p_Context)_localctx, predIndex);
		case 46: return list_o_lexer_atomexpr_p__sempred((List_o_lexer_atomexpr_p_Context)_localctx, predIndex);
		case 48: return lexer_atomexpr_sempred((Lexer_atomexprContext)_localctx, predIndex);
		}
		return true;
	}
	private bool list_o_toplevel_p__sempred(List_o_toplevel_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return Precpred(Context, 1);
		}
		return true;
	}
	private bool slist_o__i__s__i__s_param_type_p__sempred(Slist_o__i__s__i__s_param_type_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 1: return Precpred(Context, 1);
		}
		return true;
	}
	private bool slist_o__i__s__i__s_typ_p__sempred(Slist_o__i__s__i__s_typ_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 2: return Precpred(Context, 1);
		}
		return true;
	}
	private bool typ2_sempred(Typ2Context _localctx, int predIndex) {
		switch (predIndex) {
		case 3: return Precpred(Context, 1);
		}
		return true;
	}
	private bool type_product_sempred(Type_productContext _localctx, int predIndex) {
		switch (predIndex) {
		case 4: return Precpred(Context, 2);
		}
		return true;
	}
	private bool slist_o__i__s__i__s_tvar_str_p__sempred(Slist_o__i__s__i__s_tvar_str_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 5: return Precpred(Context, 1);
		}
		return true;
	}
	private bool slist_o__i__s__i__s_field_ann_p__sempred(Slist_o__i__s__i__s_field_ann_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 6: return Precpred(Context, 1);
		}
		return true;
	}
	private bool slist_o__i__s__i__s_identstr_p__sempred(Slist_o__i__s__i__s_identstr_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 7: return Precpred(Context, 1);
		}
		return true;
	}
	private bool productions_sempred(ProductionsContext _localctx, int predIndex) {
		switch (predIndex) {
		case 8: return Precpred(Context, 1);
		}
		return true;
	}
	private bool list_o_psym_p__sempred(List_o_psym_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 9: return Precpred(Context, 1);
		}
		return true;
	}
	private bool slist_o__i__s__i__s_psym_p__sempred(Slist_o__i__s__i__s_psym_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 10: return Precpred(Context, 1);
		}
		return true;
	}
	private bool slist_o__i__s__i__s_ann_p__sempred(Slist_o__i__s__i__s_ann_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 11: return Precpred(Context, 1);
		}
		return true;
	}
	private bool call_sempred(CallContext _localctx, int predIndex) {
		switch (predIndex) {
		case 12: return Precpred(Context, 2);
		}
		return true;
	}
	private bool slist_o__i__s__i__s_expr_p__sempred(Slist_o__i__s__i__s_expr_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 13: return Precpred(Context, 1);
		}
		return true;
	}
	private bool atomexp_sempred(AtomexpContext _localctx, int predIndex) {
		switch (predIndex) {
		case 14: return Precpred(Context, 3);
		}
		return true;
	}
	private bool slist_o__i__u__i__s_lexer_and_p__sempred(Slist_o__i__u__i__s_lexer_and_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 15: return Precpred(Context, 1);
		}
		return true;
	}
	private bool list_o_lexer_atomexpr_p__sempred(List_o_lexer_atomexpr_p_Context _localctx, int predIndex) {
		switch (predIndex) {
		case 16: return Precpred(Context, 1);
		}
		return true;
	}
	private bool lexer_atomexpr_sempred(Lexer_atomexprContext _localctx, int predIndex) {
		switch (predIndex) {
		case 17: return Precpred(Context, 4);
		case 18: return Precpred(Context, 3);
		case 19: return Precpred(Context, 2);
		}
		return true;
	}

	private static int[] _serializedATN = {
		4,1,41,656,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,
		7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,
		2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,
		2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,
		2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,
		2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,
		2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,
		2,50,7,50,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,1,115,8,1,
		10,1,12,1,118,9,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,
		1,5,1,5,1,5,1,5,1,5,5,5,138,8,5,10,5,12,5,141,9,5,1,6,1,6,1,6,1,6,3,6,
		147,8,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
		8,1,8,1,8,3,8,167,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,5,9,178,8,9,
		10,9,12,9,181,9,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,5,
		10,193,8,10,10,10,12,10,196,9,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
		11,1,11,5,11,207,8,11,10,11,12,11,210,9,11,1,12,1,12,1,12,1,12,1,12,1,
		12,1,12,1,12,1,12,3,12,221,8,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,
		1,14,1,14,1,14,3,14,234,8,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
		15,5,15,245,8,15,10,15,12,15,248,9,15,1,16,1,16,1,16,1,16,1,16,1,16,3,
		16,256,8,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
		1,18,1,18,5,18,272,8,18,10,18,12,18,275,9,18,1,19,1,19,1,19,1,19,3,19,
		281,8,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,3,21,292,8,21,1,
		22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
		22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,3,22,320,8,22,
		1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,
		335,8,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,5,24,346,8,24,10,
		24,12,24,349,9,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,
		25,3,25,362,8,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,5,26,
		374,8,26,10,26,12,26,377,9,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
		5,27,387,8,27,10,27,12,27,390,9,27,1,28,1,28,1,28,1,28,3,28,396,8,28,1,
		29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,
		31,1,31,1,31,1,31,5,31,416,8,31,10,31,12,31,419,9,31,1,32,1,32,1,32,1,
		32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,3,32,437,
		8,32,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
		1,34,5,34,453,8,34,10,34,12,34,456,9,34,1,35,1,35,1,35,1,35,3,35,462,8,
		35,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,
		38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,
		38,1,38,1,38,3,38,494,8,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,
		1,39,5,39,506,8,39,10,39,12,39,509,9,39,1,40,1,40,1,40,1,40,3,40,515,8,
		40,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,5,42,529,
		8,42,10,42,12,42,532,9,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
		1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
		1,43,1,43,1,43,1,43,1,43,1,43,3,43,563,8,43,1,43,1,43,1,43,1,43,5,43,569,
		8,43,10,43,12,43,572,9,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,
		5,44,583,8,44,10,44,12,44,586,9,44,1,45,1,45,1,45,1,46,1,46,1,46,1,46,
		1,46,1,46,1,46,1,46,5,46,599,8,46,10,46,12,46,602,9,46,1,47,1,47,1,47,
		1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,5,48,
		620,8,48,10,48,12,48,623,9,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
		1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
		1,49,3,49,648,8,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,0,18,2,10,18,20,
		22,30,36,48,52,54,62,68,78,84,86,88,92,96,51,0,2,4,6,8,10,12,14,16,18,
		20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,
		68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,0,0,665,0,102,1,0,
		0,0,2,106,1,0,0,0,4,119,1,0,0,0,6,122,1,0,0,0,8,125,1,0,0,0,10,128,1,0,
		0,0,12,146,1,0,0,0,14,148,1,0,0,0,16,166,1,0,0,0,18,168,1,0,0,0,20,182,
		1,0,0,0,22,197,1,0,0,0,24,220,1,0,0,0,26,222,1,0,0,0,28,233,1,0,0,0,30,
		235,1,0,0,0,32,255,1,0,0,0,34,257,1,0,0,0,36,262,1,0,0,0,38,280,1,0,0,
		0,40,282,1,0,0,0,42,291,1,0,0,0,44,319,1,0,0,0,46,334,1,0,0,0,48,336,1,
		0,0,0,50,361,1,0,0,0,52,363,1,0,0,0,54,378,1,0,0,0,56,395,1,0,0,0,58,397,
		1,0,0,0,60,400,1,0,0,0,62,406,1,0,0,0,64,436,1,0,0,0,66,438,1,0,0,0,68,
		443,1,0,0,0,70,461,1,0,0,0,72,463,1,0,0,0,74,466,1,0,0,0,76,493,1,0,0,
		0,78,495,1,0,0,0,80,514,1,0,0,0,82,516,1,0,0,0,84,519,1,0,0,0,86,562,1,
		0,0,0,88,573,1,0,0,0,90,587,1,0,0,0,92,590,1,0,0,0,94,603,1,0,0,0,96,606,
		1,0,0,0,98,647,1,0,0,0,100,649,1,0,0,0,102,103,3,4,2,0,103,104,5,0,0,1,
		104,105,6,0,-1,0,105,1,1,0,0,0,106,107,6,1,-1,0,107,108,3,46,23,0,108,
		109,6,1,-1,0,109,116,1,0,0,0,110,111,10,1,0,0,111,112,3,46,23,0,112,113,
		6,1,-1,0,113,115,1,0,0,0,114,110,1,0,0,0,115,118,1,0,0,0,116,114,1,0,0,
		0,116,117,1,0,0,0,117,3,1,0,0,0,118,116,1,0,0,0,119,120,3,2,1,0,120,121,
		6,2,-1,0,121,5,1,0,0,0,122,123,5,35,0,0,123,124,6,3,-1,0,124,7,1,0,0,0,
		125,126,3,16,8,0,126,127,6,4,-1,0,127,9,1,0,0,0,128,129,6,5,-1,0,129,130,
		3,28,14,0,130,131,6,5,-1,0,131,139,1,0,0,0,132,133,10,1,0,0,133,134,5,
		1,0,0,134,135,3,28,14,0,135,136,6,5,-1,0,136,138,1,0,0,0,137,132,1,0,0,
		0,138,141,1,0,0,0,139,137,1,0,0,0,139,140,1,0,0,0,140,11,1,0,0,0,141,139,
		1,0,0,0,142,147,6,6,-1,0,143,144,3,10,5,0,144,145,6,6,-1,0,145,147,1,0,
		0,0,146,142,1,0,0,0,146,143,1,0,0,0,147,13,1,0,0,0,148,149,3,12,6,0,149,
		150,6,7,-1,0,150,15,1,0,0,0,151,152,3,20,10,0,152,153,5,2,0,0,153,154,
		3,16,8,0,154,155,6,8,-1,0,155,167,1,0,0,0,156,157,5,3,0,0,157,158,3,14,
		7,0,158,159,5,4,0,0,159,160,5,2,0,0,160,161,3,16,8,0,161,162,6,8,-1,0,
		162,167,1,0,0,0,163,164,3,22,11,0,164,165,6,8,-1,0,165,167,1,0,0,0,166,
		151,1,0,0,0,166,156,1,0,0,0,166,163,1,0,0,0,167,17,1,0,0,0,168,169,6,9,
		-1,0,169,170,3,8,4,0,170,171,6,9,-1,0,171,179,1,0,0,0,172,173,10,1,0,0,
		173,174,5,1,0,0,174,175,3,8,4,0,175,176,6,9,-1,0,176,178,1,0,0,0,177,172,
		1,0,0,0,178,181,1,0,0,0,179,177,1,0,0,0,179,180,1,0,0,0,180,19,1,0,0,0,
		181,179,1,0,0,0,182,183,6,10,-1,0,183,184,5,35,0,0,184,185,6,10,-1,0,185,
		194,1,0,0,0,186,187,10,1,0,0,187,188,5,5,0,0,188,189,3,18,9,0,189,190,
		5,6,0,0,190,191,6,10,-1,0,191,193,1,0,0,0,192,186,1,0,0,0,193,196,1,0,
		0,0,194,192,1,0,0,0,194,195,1,0,0,0,195,21,1,0,0,0,196,194,1,0,0,0,197,
		198,6,11,-1,0,198,199,3,20,10,0,199,200,6,11,-1,0,200,208,1,0,0,0,201,
		202,10,2,0,0,202,203,5,7,0,0,203,204,3,20,10,0,204,205,6,11,-1,0,205,207,
		1,0,0,0,206,201,1,0,0,0,207,210,1,0,0,0,208,206,1,0,0,0,208,209,1,0,0,
		0,209,23,1,0,0,0,210,208,1,0,0,0,211,212,5,5,0,0,212,213,3,30,15,0,213,
		214,5,6,0,0,214,215,3,8,4,0,215,216,6,12,-1,0,216,221,1,0,0,0,217,218,
		3,8,4,0,218,219,6,12,-1,0,219,221,1,0,0,0,220,211,1,0,0,0,220,217,1,0,
		0,0,221,25,1,0,0,0,222,223,5,35,0,0,223,224,6,13,-1,0,224,27,1,0,0,0,225,
		226,5,35,0,0,226,227,5,8,0,0,227,228,3,8,4,0,228,229,6,14,-1,0,229,234,
		1,0,0,0,230,231,3,8,4,0,231,232,6,14,-1,0,232,234,1,0,0,0,233,225,1,0,
		0,0,233,230,1,0,0,0,234,29,1,0,0,0,235,236,6,15,-1,0,236,237,3,26,13,0,
		237,238,6,15,-1,0,238,246,1,0,0,0,239,240,10,1,0,0,240,241,5,1,0,0,241,
		242,3,26,13,0,242,243,6,15,-1,0,243,245,1,0,0,0,244,239,1,0,0,0,245,248,
		1,0,0,0,246,244,1,0,0,0,246,247,1,0,0,0,247,31,1,0,0,0,248,246,1,0,0,0,
		249,250,5,5,0,0,250,251,3,30,15,0,251,252,5,6,0,0,252,253,6,16,-1,0,253,
		256,1,0,0,0,254,256,6,16,-1,0,255,249,1,0,0,0,255,254,1,0,0,0,256,33,1,
		0,0,0,257,258,5,35,0,0,258,259,5,8,0,0,259,260,3,8,4,0,260,261,6,17,-1,
		0,261,35,1,0,0,0,262,263,6,18,-1,0,263,264,3,34,17,0,264,265,6,18,-1,0,
		265,273,1,0,0,0,266,267,10,1,0,0,267,268,5,1,0,0,268,269,3,34,17,0,269,
		270,6,18,-1,0,270,272,1,0,0,0,271,266,1,0,0,0,272,275,1,0,0,0,273,271,
		1,0,0,0,273,274,1,0,0,0,274,37,1,0,0,0,275,273,1,0,0,0,276,281,6,19,-1,
		0,277,278,3,36,18,0,278,279,6,19,-1,0,279,281,1,0,0,0,280,276,1,0,0,0,
		280,277,1,0,0,0,281,39,1,0,0,0,282,283,3,38,19,0,283,284,6,20,-1,0,284,
		41,1,0,0,0,285,286,5,3,0,0,286,287,3,40,20,0,287,288,5,4,0,0,288,289,6,
		21,-1,0,289,292,1,0,0,0,290,292,6,21,-1,0,291,285,1,0,0,0,291,290,1,0,
		0,0,292,43,1,0,0,0,293,294,5,9,0,0,294,295,5,10,0,0,295,296,3,6,3,0,296,
		297,5,8,0,0,297,298,3,24,12,0,298,299,6,22,-1,0,299,320,1,0,0,0,300,301,
		5,11,0,0,301,302,3,6,3,0,302,303,5,8,0,0,303,304,3,8,4,0,304,305,6,22,
		-1,0,305,320,1,0,0,0,306,307,5,9,0,0,307,308,5,12,0,0,308,309,3,6,3,0,
		309,310,3,32,16,0,310,311,3,42,21,0,311,312,6,22,-1,0,312,320,1,0,0,0,
		313,314,5,12,0,0,314,315,3,6,3,0,315,316,3,32,16,0,316,317,3,42,21,0,317,
		318,6,22,-1,0,318,320,1,0,0,0,319,293,1,0,0,0,319,300,1,0,0,0,319,306,
		1,0,0,0,319,313,1,0,0,0,320,45,1,0,0,0,321,322,3,50,25,0,322,323,6,23,
		-1,0,323,335,1,0,0,0,324,325,3,44,22,0,325,326,6,23,-1,0,326,335,1,0,0,
		0,327,328,3,100,50,0,328,329,6,23,-1,0,329,335,1,0,0,0,330,331,5,13,0,
		0,331,332,3,48,24,0,332,333,6,23,-1,0,333,335,1,0,0,0,334,321,1,0,0,0,
		334,324,1,0,0,0,334,327,1,0,0,0,334,330,1,0,0,0,335,47,1,0,0,0,336,337,
		6,24,-1,0,337,338,3,6,3,0,338,339,6,24,-1,0,339,347,1,0,0,0,340,341,10,
		1,0,0,341,342,5,1,0,0,342,343,3,6,3,0,343,344,6,24,-1,0,344,346,1,0,0,
		0,345,340,1,0,0,0,346,349,1,0,0,0,347,345,1,0,0,0,347,348,1,0,0,0,348,
		49,1,0,0,0,349,347,1,0,0,0,350,351,5,35,0,0,351,352,5,3,0,0,352,353,3,
		48,24,0,353,354,5,4,0,0,354,355,3,52,26,0,355,356,6,25,-1,0,356,362,1,
		0,0,0,357,358,5,35,0,0,358,359,3,52,26,0,359,360,6,25,-1,0,360,362,1,0,
		0,0,361,350,1,0,0,0,361,357,1,0,0,0,362,51,1,0,0,0,363,364,6,26,-1,0,364,
		365,5,8,0,0,365,366,3,60,30,0,366,367,6,26,-1,0,367,375,1,0,0,0,368,369,
		10,1,0,0,369,370,5,14,0,0,370,371,3,60,30,0,371,372,6,26,-1,0,372,374,
		1,0,0,0,373,368,1,0,0,0,374,377,1,0,0,0,375,373,1,0,0,0,375,376,1,0,0,
		0,376,53,1,0,0,0,377,375,1,0,0,0,378,379,6,27,-1,0,379,380,3,64,32,0,380,
		381,6,27,-1,0,381,388,1,0,0,0,382,383,10,1,0,0,383,384,3,64,32,0,384,385,
		6,27,-1,0,385,387,1,0,0,0,386,382,1,0,0,0,387,390,1,0,0,0,388,386,1,0,
		0,0,388,389,1,0,0,0,389,55,1,0,0,0,390,388,1,0,0,0,391,396,6,28,-1,0,392,
		393,3,54,27,0,393,394,6,28,-1,0,394,396,1,0,0,0,395,391,1,0,0,0,395,392,
		1,0,0,0,396,57,1,0,0,0,397,398,3,56,28,0,398,399,6,29,-1,0,399,59,1,0,
		0,0,400,401,3,58,29,0,401,402,5,15,0,0,402,403,3,76,38,0,403,404,5,16,
		0,0,404,405,6,30,-1,0,405,61,1,0,0,0,406,407,6,31,-1,0,407,408,3,64,32,
		0,408,409,6,31,-1,0,409,417,1,0,0,0,410,411,10,1,0,0,411,412,5,1,0,0,412,
		413,3,64,32,0,413,414,6,31,-1,0,414,416,1,0,0,0,415,410,1,0,0,0,416,419,
		1,0,0,0,417,415,1,0,0,0,417,418,1,0,0,0,418,63,1,0,0,0,419,417,1,0,0,0,
		420,421,5,5,0,0,421,422,3,6,3,0,422,423,5,6,0,0,423,424,6,32,-1,0,424,
		437,1,0,0,0,425,426,5,39,0,0,426,437,6,32,-1,0,427,428,3,6,3,0,428,429,
		6,32,-1,0,429,437,1,0,0,0,430,431,5,35,0,0,431,432,5,3,0,0,432,433,3,62,
		31,0,433,434,5,4,0,0,434,435,6,32,-1,0,435,437,1,0,0,0,436,420,1,0,0,0,
		436,425,1,0,0,0,436,427,1,0,0,0,436,430,1,0,0,0,437,65,1,0,0,0,438,439,
		3,6,3,0,439,440,5,8,0,0,440,441,3,8,4,0,441,442,6,33,-1,0,442,67,1,0,0,
		0,443,444,6,34,-1,0,444,445,3,66,33,0,445,446,6,34,-1,0,446,454,1,0,0,
		0,447,448,10,1,0,0,448,449,5,1,0,0,449,450,3,66,33,0,450,451,6,34,-1,0,
		451,453,1,0,0,0,452,447,1,0,0,0,453,456,1,0,0,0,454,452,1,0,0,0,454,455,
		1,0,0,0,455,69,1,0,0,0,456,454,1,0,0,0,457,462,6,35,-1,0,458,459,3,68,
		34,0,459,460,6,35,-1,0,460,462,1,0,0,0,461,457,1,0,0,0,461,458,1,0,0,0,
		462,71,1,0,0,0,463,464,3,70,35,0,464,465,6,36,-1,0,465,73,1,0,0,0,466,
		467,5,3,0,0,467,468,3,72,36,0,468,469,5,4,0,0,469,470,6,37,-1,0,470,75,
		1,0,0,0,471,472,5,17,0,0,472,473,3,6,3,0,473,474,5,18,0,0,474,475,3,76,
		38,0,475,476,5,19,0,0,476,477,3,76,38,0,477,478,6,38,-1,0,478,494,1,0,
		0,0,479,480,5,20,0,0,480,481,3,74,37,0,481,482,5,2,0,0,482,483,3,76,38,
		0,483,484,6,38,-1,0,484,494,1,0,0,0,485,486,3,78,39,0,486,487,6,38,-1,
		0,487,494,1,0,0,0,488,489,3,78,39,0,489,490,5,21,0,0,490,491,3,76,38,0,
		491,492,6,38,-1,0,492,494,1,0,0,0,493,471,1,0,0,0,493,479,1,0,0,0,493,
		485,1,0,0,0,493,488,1,0,0,0,494,77,1,0,0,0,495,496,6,39,-1,0,496,497,3,
		86,43,0,497,498,6,39,-1,0,498,507,1,0,0,0,499,500,10,2,0,0,500,501,5,3,
		0,0,501,502,3,82,41,0,502,503,5,4,0,0,503,504,6,39,-1,0,504,506,1,0,0,
		0,505,499,1,0,0,0,506,509,1,0,0,0,507,505,1,0,0,0,507,508,1,0,0,0,508,
		79,1,0,0,0,509,507,1,0,0,0,510,515,6,40,-1,0,511,512,3,84,42,0,512,513,
		6,40,-1,0,513,515,1,0,0,0,514,510,1,0,0,0,514,511,1,0,0,0,515,81,1,0,0,
		0,516,517,3,80,40,0,517,518,6,41,-1,0,518,83,1,0,0,0,519,520,6,42,-1,0,
		520,521,3,76,38,0,521,522,6,42,-1,0,522,530,1,0,0,0,523,524,10,1,0,0,524,
		525,5,1,0,0,525,526,3,76,38,0,526,527,6,42,-1,0,527,529,1,0,0,0,528,523,
		1,0,0,0,529,532,1,0,0,0,530,528,1,0,0,0,530,531,1,0,0,0,531,85,1,0,0,0,
		532,530,1,0,0,0,533,534,6,43,-1,0,534,535,5,36,0,0,535,563,6,43,-1,0,536,
		537,5,38,0,0,537,563,6,43,-1,0,538,539,5,39,0,0,539,563,6,43,-1,0,540,
		541,5,22,0,0,541,542,5,36,0,0,542,563,6,43,-1,0,543,544,5,23,0,0,544,545,
		3,82,41,0,545,546,5,24,0,0,546,547,6,43,-1,0,547,563,1,0,0,0,548,549,5,
		3,0,0,549,550,5,4,0,0,550,563,6,43,-1,0,551,552,5,3,0,0,552,553,3,84,42,
		0,553,554,5,4,0,0,554,555,6,43,-1,0,555,563,1,0,0,0,556,557,5,35,0,0,557,
		563,6,43,-1,0,558,559,5,26,0,0,559,563,6,43,-1,0,560,561,5,27,0,0,561,
		563,6,43,-1,0,562,533,1,0,0,0,562,536,1,0,0,0,562,538,1,0,0,0,562,540,
		1,0,0,0,562,543,1,0,0,0,562,548,1,0,0,0,562,551,1,0,0,0,562,556,1,0,0,
		0,562,558,1,0,0,0,562,560,1,0,0,0,563,570,1,0,0,0,564,565,10,3,0,0,565,
		566,5,25,0,0,566,567,5,35,0,0,567,569,6,43,-1,0,568,564,1,0,0,0,569,572,
		1,0,0,0,570,568,1,0,0,0,570,571,1,0,0,0,571,87,1,0,0,0,572,570,1,0,0,0,
		573,574,6,44,-1,0,574,575,3,94,47,0,575,576,6,44,-1,0,576,584,1,0,0,0,
		577,578,10,1,0,0,578,579,5,14,0,0,579,580,3,94,47,0,580,581,6,44,-1,0,
		581,583,1,0,0,0,582,577,1,0,0,0,583,586,1,0,0,0,584,582,1,0,0,0,584,585,
		1,0,0,0,585,89,1,0,0,0,586,584,1,0,0,0,587,588,3,88,44,0,588,589,6,45,
		-1,0,589,91,1,0,0,0,590,591,6,46,-1,0,591,592,3,96,48,0,592,593,6,46,-1,
		0,593,600,1,0,0,0,594,595,10,1,0,0,595,596,3,96,48,0,596,597,6,46,-1,0,
		597,599,1,0,0,0,598,594,1,0,0,0,599,602,1,0,0,0,600,598,1,0,0,0,600,601,
		1,0,0,0,601,93,1,0,0,0,602,600,1,0,0,0,603,604,3,92,46,0,604,605,6,47,
		-1,0,605,95,1,0,0,0,606,607,6,48,-1,0,607,608,3,98,49,0,608,609,6,48,-1,
		0,609,621,1,0,0,0,610,611,10,4,0,0,611,612,5,28,0,0,612,620,6,48,-1,0,
		613,614,10,3,0,0,614,615,5,7,0,0,615,620,6,48,-1,0,616,617,10,2,0,0,617,
		618,5,29,0,0,618,620,6,48,-1,0,619,610,1,0,0,0,619,613,1,0,0,0,619,616,
		1,0,0,0,620,623,1,0,0,0,621,619,1,0,0,0,621,622,1,0,0,0,622,97,1,0,0,0,
		623,621,1,0,0,0,624,625,5,39,0,0,625,648,6,49,-1,0,626,627,5,30,0,0,627,
		628,3,98,49,0,628,629,6,49,-1,0,629,648,1,0,0,0,630,631,5,3,0,0,631,632,
		3,90,45,0,632,633,5,4,0,0,633,634,6,49,-1,0,634,648,1,0,0,0,635,636,5,
		31,0,0,636,648,6,49,-1,0,637,638,5,34,0,0,638,648,6,49,-1,0,639,640,5,
		33,0,0,640,648,6,49,-1,0,641,642,5,32,0,0,642,648,6,49,-1,0,643,644,5,
		25,0,0,644,648,6,49,-1,0,645,646,5,35,0,0,646,648,6,49,-1,0,647,624,1,
		0,0,0,647,626,1,0,0,0,647,630,1,0,0,0,647,635,1,0,0,0,647,637,1,0,0,0,
		647,639,1,0,0,0,647,641,1,0,0,0,647,643,1,0,0,0,647,645,1,0,0,0,648,99,
		1,0,0,0,649,650,5,35,0,0,650,651,5,18,0,0,651,652,3,90,45,0,652,653,5,
		21,0,0,653,654,6,50,-1,0,654,101,1,0,0,0,36,116,139,146,166,179,194,208,
		220,233,246,255,273,280,291,319,334,347,361,375,388,395,417,436,454,461,
		493,507,514,530,562,570,584,600,619,621,647
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace TypedBNF
