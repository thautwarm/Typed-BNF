start : block -> start_0
nempty_list_o_stat_p_ : stat -> nempty_list_o_stat_p__0
                      | nempty_list_o_stat_p_ stat -> nempty_list_o_stat_p__1
allow_empty_o_nempty_list_o_stat_p__p_ :  -> allow_empty_o_nempty_list_o_stat_p__p__0
                                       | nempty_list_o_stat_p_ -> allow_empty_o_nempty_list_o_stat_p__p__1
list_o_stat_p_ : allow_empty_o_nempty_list_o_stat_p__p_ -> list_o_stat_p__0
opt_o_retstat_p_ : retstat -> opt_o_retstat_p__0
                 |  -> opt_o_retstat_p__1
block : list_o_stat_p_ opt_o_retstat_p_ -> block_0
opt_o__i__h__i__p_ : _I__H__I_ -> opt_o__i__h__i__p__0
                   |  -> opt_o__i__h__i__p__1
retstat : _I_RETURN_I_ seplist_o__i__s__i__s_exp_p_ opt_o__i__h__i__p_ -> retstat_0
nempty_list_o_elseif_p_ : elseif -> nempty_list_o_elseif_p__0
                        | nempty_list_o_elseif_p_ elseif -> nempty_list_o_elseif_p__1
allow_empty_o_nempty_list_o_elseif_p__p_ :  -> allow_empty_o_nempty_list_o_elseif_p__p__0
                                         | nempty_list_o_elseif_p_ -> allow_empty_o_nempty_list_o_elseif_p__p__1
list_o_elseif_p_ : allow_empty_o_nempty_list_o_elseif_p__p_ -> list_o_elseif_p__0
opt_o_else_p_ : else__x_ -> opt_o_else_p__0
              |  -> opt_o_else_p__1
stat : _I__H__I_ -> stat_0
     | nempty_seplist_o__i__s__i__s_exp_p_ _I__J__I_ nempty_seplist_o__i__s__i__s_exp_p_ -> stat_1
     | exp -> stat_2
     | _I__G__G__I_ NAME _I__G__G__I_ -> stat_3
     | _I_BREAK_I_ -> stat_4
     | _I_GOTO_I_ NAME -> stat_5
     | _I_DO_I_ block _I_END_I_ -> stat_6
     | _I_WHILE_I_ exp _I_DO_I_ block _I_END_I_ -> stat_7
     | _I_REPEAT_I_ block _I_UNTIL_I_ exp -> stat_8
     | _I_IF_I_ exp _I_THEN_I_ block list_o_elseif_p_ opt_o_else_p_ _I_END_I_ -> stat_9
     | _I_FOR_I_ NAME _I__J__I_ range _I_DO_I_ block _I_END_I_ -> stat_10
     | _I_FOR_I_ nempty_seplist_o__i__s__i__s__i_name_k__p_ _I_IN_I_ nempty_seplist_o__i__s__i__s_exp_p_ _I_DO_I_ block _I_END_I_ -> stat_11
     | _I_LOCAL_I_ _I_FUNCTION_I_ funcname _I__O__I_ opt_o_parlist_p_ _I__P__I_ block _I_END_I_ -> stat_12
     | _I_LOCAL_I_ nempty_seplist_o__i__s__i__s__i_name_k__p_ opt_assign_rhs -> stat_13
opt_assign_rhs : _I__J__I_ nempty_seplist_o__i__s__i__s_exp_p_ -> opt_assign_rhs_0
               |  -> opt_assign_rhs_1
range : exp _I__S__I_ exp range_tail -> range_0
range_tail : _I__S__I_ exp -> range_tail_0
           |  -> range_tail_1
elseif : _I_ELSEIF_I_ exp _I_THEN_I_ block -> elseif_0
else__x_ : _I_ELSE_I_ block -> else__x__0
exp : binexp -> exp_0
binexp : binseq -> binexp_0
binseq : binseq binop binoperand -> binseq_0
       | binoperand -> binseq_1
binoperand : unaryexp -> binoperand_0
unaryexp : _I__J__I__J exponent -> unaryexp_0
         | _I__T__I_ exponent -> unaryexp_1
         | _I__W__I_ exponent -> unaryexp_2
         | _I_NOT_I_ exponent -> unaryexp_3
         | exponent -> unaryexp_4
exponent : prefixexp _I__Q__I_ exponent -> exponent_0
         | prefixexp -> exponent_1
prefixexp : NAME -> prefixexp_0
          | _I__O__I_ exp _I__P__I_ -> prefixexp_1
          | prefixexp args -> prefixexp_2
          | prefixexp _I__G__I_ NAME args -> prefixexp_3
          | prefixexp _I__N__I_ exp _I__P__I__J -> prefixexp_4
          | prefixexp _I__U__I_ NAME -> prefixexp_5
          | atom -> prefixexp_6
atom : _I_NIL_I_ -> atom_0
     | _I_FALSE_I_ -> atom_1
     | _I_TRUE_I_ -> atom_2
     | NUMERAL -> atom_3
     | STR_LIT -> atom_4
     | NESTED_STR -> atom_5
     | _I__U__U__U__I_ -> atom_6
     | functiondef -> atom_7
     | tableconstructor -> atom_8
nempty_seplist_o__i__s__i__s_exp_p_ : exp -> nempty_seplist_o__i__s__i__s_exp_p__0
                                    | nempty_seplist_o__i__s__i__s_exp_p_ _I__S__I_ exp -> nempty_seplist_o__i__s__i__s_exp_p__1
allow_empty_o_nempty_seplist_o__i__s__i__s_exp_p__p_ :  -> allow_empty_o_nempty_seplist_o__i__s__i__s_exp_p__p__0
                                                     | nempty_seplist_o__i__s__i__s_exp_p_ -> allow_empty_o_nempty_seplist_o__i__s__i__s_exp_p__p__1
seplist_o__i__s__i__s_exp_p_ : allow_empty_o_nempty_seplist_o__i__s__i__s_exp_p__p_ -> seplist_o__i__s__i__s_exp_p__0
args : _I__O__I_ seplist_o__i__s__i__s_exp_p_ _I__P__I_ -> args_0
     | tableconstructor -> args_1
     | STR_LIT -> args_2
opt_o_funcname_p_ : funcname -> opt_o_funcname_p__0
                  |  -> opt_o_funcname_p__1
opt_o_parlist_p_ : parlist -> opt_o_parlist_p__0
                 |  -> opt_o_parlist_p__1
functiondef : _I_FUNCTION_I_ opt_o_funcname_p_ _I__O__I_ opt_o_parlist_p_ _I__P__I_ block _I_END_I_ -> functiondef_0
varargs : _I__S__I_ _I__U__U__U__I_ -> varargs_0
        |  -> varargs_1
nempty_seplist_o__i__s__i__s__i_name_k__p_ : NAME -> nempty_seplist_o__i__s__i__s__i_name_k__p__0
                                           | nempty_seplist_o__i__s__i__s__i_name_k__p_ _I__S__I_ NAME -> nempty_seplist_o__i__s__i__s__i_name_k__p__1
parlist : _I__U__U__U__I_ -> parlist_0
        | nempty_seplist_o__i__s__i__s__i_name_k__p_ varargs -> parlist_1
nempty_seplist_o_fieldsep_s_field_p_ : field -> nempty_seplist_o_fieldsep_s_field_p__0
                                     | nempty_seplist_o_fieldsep_s_field_p_ fieldsep field -> nempty_seplist_o_fieldsep_s_field_p__1
opt_o_fieldsep_p_ : fieldsep -> opt_o_fieldsep_p__0
                  |  -> opt_o_fieldsep_p__1
tableconstructor : _I__T__I__J nempty_seplist_o_fieldsep_s_field_p_ opt_o_fieldsep_p_ _I__V__I_ -> tableconstructor_0
                 | _I__T__I__J _I__V__I_ -> tableconstructor_1
funcname : funcname _I__U__I_ NAME -> funcname_0
         | funcname _I__G__I_ NAME -> funcname_1
         | NAME -> funcname_2
field : _I__N__I_ exp _I__P__I__J _I__J__I_ exp -> field_0
      | NAME _I__J__I_ exp -> field_1
      | exp -> field_2
fieldsep : _I__S__I_ -> fieldsep_0
         | _I__H__I_ -> fieldsep_1
binop : _I_OR_I_ -> binop_0
      | _I_AND_I_ -> binop_1
      | _I__I__I_ -> binop_2
      | _I__K__I_ -> binop_3
      | _I__I__J__I_ -> binop_4
      | _I__K__J__I_ -> binop_5
      | _I__W__J__I_ -> binop_6
      | _I__J__J__I_ -> binop_7
      | _I__U__I__J -> binop_8
      | _I__W__I_ -> binop_9
      | _I__M__I_ -> binop_10
      | _I__I__I__I_ -> binop_11
      | _I__K__K__I_ -> binop_12
      | _I__U__U__I_ -> binop_13
      | _I__R__I_ -> binop_14
      | _I__T__I_ -> binop_15
      | _I__Q__I__J -> binop_16
      | _I__V__I__J -> binop_17
      | _I__V__V__I_ -> binop_18
      | _I__L__I_ -> binop_19
%declare _I__J__I__J _I__L__I_ _I__M__I_ _I__O__I_ _I__P__I_ _I__Q__I__J _I__R__I_ _I__S__I_ _I__T__I_ _I__U__I_ _I__U__U__I_ _I__U__U__U__I_ _I__V__I__J _I__V__V__I_ _I__G__I_ _I__G__G__I_ _I__H__I_ _I__I__I_ _I__I__I__I_ _I__I__J__I_ _I__J__I_ _I__J__J__I_ _I__K__I_ _I__K__J__I_ _I__K__K__I_ _I__N__I_ _I__P__I__J _I__Q__I_ _I_AND_I_ _I_BREAK_I_ _I_DO_I_ _I_ELSE_I_ _I_ELSEIF_I_ _I_END_I_ _I_FALSE_I_ _I_FOR_I_ _I_FUNCTION_I_ _I_GOTO_I_ _I_IF_I_ _I_IN_I_ _I_LOCAL_I_ _I_NIL_I_ _I_NOT_I_ _I_OR_I_ _I_REPEAT_I_ _I_RETURN_I_ _I_THEN_I_ _I_TRUE_I_ _I_UNTIL_I_ _I_WHILE_I_ _I__T__I__J _I__U__I__J _I__V__I_ _I__W__I_ _I__W__J__I_ NAME NUMERAL STR_LIT NESTED_STR UNKNOWN
